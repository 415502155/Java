<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
						http://www.springframework.org/schema/rabbit 
						http://www.springframework.org/schema/rabbit/spring-rabbit-1.7.xsd">

	<!-- A reference to the org.springframework.amqp.rabbit.connection.ConnectionFactory -->
	<rabbit:connection-factory id="connectionFactory" host="${${switch}.mq.host}" 
		username="${${switch}.mq.username}" password="${${switch}.mq.password}" port="5672" virtual-host="/" />

	<rabbit:admin connection-factory="connectionFactory" />

	<!-- 消息对象json转换类 -->
	<bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />

	<!-- Creates a org.springframework.amqp.rabbit.core.RabbitTemplate for access to the broker -->
	<rabbit:template id="rabbitTemplate" connection-factory="connectionFactory" message-converter="jsonMessageConverter" />

	<!--↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ 报名 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓-->
	<!-- 报名成功后插入相关表 -->
	<rabbit:queue id="applyQueue" name="${item}_applyQueue_${switch}${custom}" />
	<!-- 报名作废 -->
	<rabbit:queue id="applyCancelQueue" name="${item}_applyCancelQueue_${switch}${custom}" />
	<!-- 报名作废后设置不占坑 -->
	<rabbit:queue id="quotaHoldQueue" name="${item}_quotaHoldQueue_${switch}${custom}" />

	<!-- 报名相关exchange -->
	<rabbit:direct-exchange id="${item}_applyExchange_${switch}${custom}" name="${item}_applyExchange_${switch}${custom}" delayed="true">
		<rabbit:bindings>
			<rabbit:binding queue="applyQueue" key="applyQueueKey"></rabbit:binding>
			<rabbit:binding queue="applyCancelQueue" key="applyCancelQueuelKey"></rabbit:binding>
			<rabbit:binding queue="quotaHoldQueue" key="quotaHoldQueueKey"></rabbit:binding>
		</rabbit:bindings>
	</rabbit:direct-exchange>

	<!-- 消费者 -->

	<!-- 报名成功后插入相关表 -->
	<rabbit:listener-container
		connection-factory="connectionFactory" acknowledge="none" message-converter="jsonMessageConverter">
		<rabbit:listener queues="${item}_applyQueue_${switch}${custom}" ref="applyServiceImpl" method="apply" />
	</rabbit:listener-container>
	<!-- 报名作废 -->
	<rabbit:listener-container
		connection-factory="connectionFactory" acknowledge="none" message-converter="jsonMessageConverter">
		<rabbit:listener queues="${item}_applyCancelQueue_${switch}${custom}" ref="applyServiceImpl" method="applyCancel" />
	</rabbit:listener-container>
	<!-- 报名作废后设置不占坑 -->
	<rabbit:listener-container
		connection-factory="connectionFactory" acknowledge="none" message-converter="jsonMessageConverter">
		<rabbit:listener queues="${item}_quotaHoldQueue_${switch}${custom}" ref="applyServiceImpl" method="doQuotaHold" />
	</rabbit:listener-container>
	<!--↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ 报名 ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑-->
	
	<!-- ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓发送学生或教师通知 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ -->
	<!-- 学生或教师等待拆分后发送通知队列 -->
	<rabbit:queue id="Wait4SendNotice" name="${item}_Wait4SendNotice_${switch}${custom}" durable="true" />
	<!-- 学生或教师真正发送微信通知队列 -->
	<rabbit:queue id="SendNotice" name="${item}_SendNotice_${switch}${custom}" durable="true" />

	<rabbit:direct-exchange id="${item}_sendNoticeExchange_${switch}${custom}" name="${item}_sendNoticeExchange_${switch}${custom}" delayed="true">
		<rabbit:bindings>
			<rabbit:binding queue="Wait4SendNotice" key="wait4SendNotice"></rabbit:binding>
			<rabbit:binding queue="SendNotice" key="sendNotice"></rabbit:binding>
		</rabbit:bindings>
	</rabbit:direct-exchange>

	<rabbit:listener-container connection-factory="connectionFactory" acknowledge="none" message-converter="jsonMessageConverter">
		<rabbit:listener queues="${item}_Wait4SendNotice_${switch}${custom}" ref="noticeService" method="splitNoticeToNoticeDetail" />
		<rabbit:listener queues="${item}_SendNotice_${switch}${custom}" ref="noticeService" method="doSendNotice" />
	</rabbit:listener-container>

	<!-- ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑发送学生或教师通知 ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ -->
	<!-- 插班成功 通知班级教师 -->
	<rabbit:queue id="joinClassQueue" name="${item}_joinClassQueue_${switch}${custom}" />
	<rabbit:direct-exchange id="${item}_joinClassExchange_${switch}${custom}" name="${item}_joinClassExchange_${switch}${custom}" delayed="true">
		<rabbit:bindings>
			<rabbit:binding queue="joinClassQueue" key="joinClassQueueKey"></rabbit:binding>
		</rabbit:bindings>
	</rabbit:direct-exchange>
	
	<rabbit:listener-container connection-factory="connectionFactory" acknowledge="none" message-converter="jsonMessageConverter">
		<rabbit:listener queues="${item}_joinClassQueue_${switch}${custom}" ref="classServiceImpl" method="consumptionJoinClass" />
	</rabbit:listener-container>
	
	<!-- ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓支付相关↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ -->
	<!-- 缴费提醒 BEGIN -->
	<rabbit:queue id="charge_remind_queue" name="${item}_charge_remind_queue_${switch}${custom}" durable="true" auto-delete="false" exclusive="false" auto-declare="true"/>
	<rabbit:fanout-exchange id="${item}_charge_remind_exchange_${switch}${custom}" name="${item}_charge_remind_exchange_${switch}${custom}" durable="true" auto-delete="false" auto-declare="true">
	    <rabbit:bindings>
	        <rabbit:binding queue="charge_remind_queue" />
	    </rabbit:bindings>
	</rabbit:fanout-exchange>
	<rabbit:listener-container connection-factory="connectionFactory" acknowledge="none" auto-declare="true" message-converter="jsonMessageConverter" concurrency="2">
		<rabbit:listener queues="${item}_charge_remind_queue_${switch}${custom}" ref="chargeManagementService" method="remindCharge"/>
	</rabbit:listener-container>
	<!-- 缴费提醒 END -->
	
	<!-- 发送短信和微信 BEGIN -->
	<rabbit:queue id="send_message_queue" name="${item}_send_message_queue_${switch}${custom}" durable="true" auto-delete="false" exclusive="false" auto-declare="true"/>
	<rabbit:fanout-exchange id="${item}_send_message_exchange_${switch}${custom}" name="${item}_send_message_exchange_${switch}${custom}" durable="true" auto-delete="false" auto-declare="true">
	    <rabbit:bindings>
	        <rabbit:binding queue="send_message_queue" />
	    </rabbit:bindings>
	</rabbit:fanout-exchange>
	<rabbit:listener-container connection-factory="connectionFactory" acknowledge="none" auto-declare="true" message-converter="jsonMessageConverter" concurrency="2">
		<rabbit:listener queues="${item}_send_message_queue_${switch}${custom}" ref="chargeManagementService" method="sendMessage"/>
	</rabbit:listener-container>
	<!-- 发送短信和微信 END -->
	
	<!-- 通过退款申请 BEGIN -->
	<rabbit:queue id="charge_refund_queue" name="${item}_charge_refund_queue_${switch}${custom}" durable="true" auto-delete="false" exclusive="false" auto-declare="true"/>
	<rabbit:fanout-exchange id="${item}_charge_refund_exchange_${switch}${custom}" name="${item}_charge_refund_exchange_${switch}${custom}" durable="true" auto-delete="false" auto-declare="true">
	    <rabbit:bindings>
	        <rabbit:binding queue="charge_refund_queue" />
	    </rabbit:bindings>
	</rabbit:fanout-exchange>
	<rabbit:listener-container connection-factory="connectionFactory" acknowledge="none" auto-declare="true" message-converter="jsonMessageConverter" concurrency="2">
		<rabbit:listener queues="${item}_charge_refund_queue_${switch}${custom}" ref="chargeManagementService" method="chargeRefund"/>
	</rabbit:listener-container>
	<!-- 通过退款申请 END -->
	<!-- ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑支付相关↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ -->
</beans>