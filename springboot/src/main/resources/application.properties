server.port = 8080

#spring.security.user.name = shy
#spring.security.user.password = 123456

#数据库连接地址，端口号，连接名，设置编码格式  加上（rewriteBatchedStatements=true）对于批量操作快
spring.datasource.url=jdbc:mysql://localhost:3306/master?useSSL=false&autoReconnect=true&useUnicode=true&characterEncoding=utf-8&rewriteBatchedStatements=true
##spring.datasource.url = jdbc:mysql://192.168.15.44:3306/ml_test?useSSL=false&useUnicode=true&characterEncoding=utf-8&rewriteBatchedStatements=true&autoReconnect=true
#用户名
spring.datasource.username=root
#密码
spring.datasource.password=123456
#数据库驱动
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

CORE_POOL_SIZE = 5
MAX_POOL_SIZE = 100
#线程池所使用的缓冲队列 
QUEUE_CAPACITY = 10

TOKEN_EXPIR_TIME = 600000

PROJECT_NAME = hello world
PACKAGE_NAME = com.java
SETTING_NAME = administrator

spring:
  ###rabbitmq
  rabbitmq.host: 127.0.0.1
  rabbitmq.port: 5672
  rabbitmq.username: guest
  rabbitmq.password: guest
  rabbitmq:
    #发送方确认机制
    #生产者将信道设置成 confmn 确认)模式，一旦信道进入 confmn 模式，所有在该信道上
    #面发布的消息都会被指派 个唯一的 IDC 开始)，一旦消息被投递到所有匹配的队列之后，
    #RabbitMQ 会发送一个确认 CBasic.Ack) 给生产者(包含消息的唯一 ID) ，这就使得生产
    #者知晓消息已经正确到达了目的地了
    publisher-confirms: true
    #当使用ConvertAndSend的时候不需要设置返回值，convertSendAndReceive才需要
    publisher-returns: true
    template:
    #当mandatory 参数设为 true,交换器无法根据自身的类型和路由键找到一个符合条件
    #的队列，那么 RabbitM 会调用 Basic.Return 命令将消息返回给生产者 。当 mandatory
    #数设置为 false 时，出现上述情形，则消息直接被丢弃
      mandatory: true
      