package sng.controller.web;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import sng.controller.common.BaseAction;
import sng.entity.Classes;
import sng.entity.OperationLog;
import sng.pojo.ClassToTeacher;
import sng.pojo.SessionInfo;
import sng.service.ClassService;
import sng.util.CommonUtils;
import sng.util.Constant;
import sng.util.Paging;
import sng.util.ReturnResult;

/***
 * 
 *  @Company sjwy
 *  @Title: ClassController.java 
 *  @Description: 
 *	@author: shy
 *  @date: 2018年10月25日 上午8:24:12
 */
@Controller
@RequestMapping("/class")
public class ClassController extends BaseAction{
	
	private final Logger log = LoggerFactory.getLogger(this.getClass());

	@Autowired
	private ClassService classService;
	/***
	 * 
	 *  @Description: 
	 *  @param classes
	 *  @return
	 */
	@RequestMapping(value = "/add.htm")
	@ResponseBody
	public ReturnResult addClass(HttpServletRequest request, @RequestBody Classes classes, HttpServletResponse response) {
		SessionInfo sessionInfo=this.getSessionInfo(request);
		Map<String,Object> reqMap=CommonUtils.doParameters(request);
		classService.save(reqMap, sessionInfo);
		return ReturnResult.success();
	}
	/***
	 * 
	 *  @Description: 
	 *  @param orgId 机构id
	 *  @param termId 学期id
	 *  @param clasType 班级类型 新生班-老生班
	 *  @param categoryId 类目id
	 *  @param subjectId 科目id
	 *  @param camId 校区id
	 *  @param classWeek 上课星期 星期一-星期二。。。
	 *  @param tech_names 教师名称
	 *  @param isAll 是否导出全部分页数据  1全部导出  其他：否
	 *  @param pageNum 当前页数
	 *  @param pageSize 每页条目数
	 *  @return
	 */
	@RequestMapping(value = "/list.htm")
	@ResponseBody
	public ReturnResult getClassList(@RequestParam(name = "pageNum", defaultValue = "1") Integer pageNum,
			@RequestParam(name = "pageSize", defaultValue = Constant.NUM_PER_PCPAGE_STRING) Integer pageSize,
			Integer orgId, Integer termId, Integer clasType, Integer categoryId,
			Integer subjectId, Integer camId, Integer classWeek, String tech_names, Integer isAll) {
		Paging<ClassToTeacher> page = new Paging<ClassToTeacher>();
		page.setPage(pageNum);
		page.setLimit(pageSize);
		classService.getClassList(orgId, termId, clasType, categoryId, subjectId, camId, classWeek, tech_names, isAll, page);
		return ReturnResult.success();
	}
	
}
