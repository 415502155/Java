package sng.service;

import java.util.Date;
import java.util.List;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import sng.entity.ChargeDetail;
import sng.pojo.StudentPojo;

/**
 * Title: ChargeService
 * Description: 支付学生端接口
 * Company: 世纪伟业
 * @author Liuyang
 * @date 2018年1月4日下午1:22:21
 */
@Service
@Transactional
public interface ChargeDetailService {
	
	/**
	 * @Title : createChargeDetail 
	 * @功能描述: 创建支付详情
	 * 报名、插班时新建，转班时先去除旧记录再创建新记录
	 * 创建的支付记录有4小时的支付时间，超过4小时无法支付
	 * @param old_cd_id:转班时传入，其他情况传空或null
	 * @param money：新生插班时传入，其他情况传空或null
	 * @返回类型：成功返回主键，失败返回0
	 */
	int createChargeDetail(Integer org_id,Integer stud_id,Integer clas_id,Integer cam_id, Integer old_cd_id, String money);

	/**
	 * 获取需要提醒的订单信息
	 * @param cid
	 * @param classIds
	 * @return SNG
	 */
	List<ChargeDetail> getListForRemind(Integer cid, String classIds, String cd_ids);

	/**
	 * 修改
	 * @param cd
	 */
	Integer update(ChargeDetail cd);

	/**
	 * @Title : getById 
	 * @功能描述:查询单个 
	 * @throws ：SNG
	 */
	ChargeDetail getById(Integer cd_id);

	/**
	 * 为待支付订单加上乐观锁
	 * @param lockDate
	 * @param cd_id
	 * @return
	 */
	Integer lockChargeDetail(Date lockDate, ChargeDetail cd);

	/**
	 * 支付
	 * @param cd
	 * @param lockDate
	 * @return
	 */
	Integer updateWithLock(ChargeDetail cd, Date lockDate);

	/**
	 * 根据主键查询可退款账单
	 * @param cd_id
	 * @return
	 */
	ChargeDetail getByIdForRefund(Integer cd_id);

	/**
	 * 根据主键查询可支付的账单
	 * @param cd_id
	 * @return
	 */
	ChargeDetail getByIdForPay(Integer cd_id);

	/**
	 * 根据订单编号获取支付详情
	 * @param string
	 * @return
	 */
	ChargeDetail getByOrderId(String orderId);

	/**
	 * 更新信息发送状态
	 * @param cd
	 */
	void updateSendStatus(ChargeDetail cd);

	/**
	 * 根据订单号查询已支付的支付详情
	 * @param orderId
	 * @return
	 */
	ChargeDetail getByOrderIdForQuery(String orderId);
	
	/**
	 * @Title : getByIdForPayWithCEBUrl 
	 * @功能描述: 获取带支付链接的支付详情信息
	 * @返回类型：ChargeDetail 
	 */
	public ChargeDetail getByIdForPayWithCEBUrl(Integer cd_id);

	/**
	 * @Title : getByIdForCorrect 
	 * @功能描述: 获取支付信息（用于纠正错误的支付信息）
	 * @返回类型：ChargeDetail 
	 */
	ChargeDetail getByIdForCorrect(Integer cd_id);

	/**
	 * @Title : getRecordList 
	 * @功能描述: 获取当前日期的所有支付记录（光大支付记录）
	 * @返回类型：List<ChargeDetail> 用ChargeDetail而非ChargeRecord是为了detail既包含了record的主要字段也有一些必要的状态字段
	 * @throws ：
	 */
	List<ChargeDetail> getRecordList(Integer accType, String date, String txnType);

	/**
	 * 用学生班级关系表主键查询支付详情表主键
	 */
	String getIdsBySCIds(String ids);

	/**
	 * 查询学生缴费记录
	 */
	List<ChargeDetail> getDetailByStudId(String stud_id);

	/**
	 * 查询缴费记录详情
	 */
	List<ChargeDetail> getDetailByStuStatus(Integer cid,int stu_status);

	/**
	 * 根据学员班级主键删除支付详情表
	 */
	int deleteByCdIds(List<StudentPojo> delList);
	
	/**
	 * 根据班级主键获取支付记录
	 */
	List<ChargeDetail> getByClasId(Integer clas_id);

	/**
	 * 结束待作废的支付详情
	 */
	void finishChargeDetail(int studId, int classId, int camId);

}
