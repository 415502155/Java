/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bestinfo.gambler.swing;

import com.bestinfo.arithmetic.NewSign;
import com.bestinfo.gambler.all.StaticVariable;
import com.bestinfo.gambler.all.HttpSend;
import com.bestinfo.gambler.batch.BatchGamblerModifyTask;
import com.bestinfo.gambler.batch.GamblerInfo;
import com.bestinfo.gambler.batch.GamblerInfoDao;
import com.bestinfo.gambler.batch.TaskManager;
import com.bestinfo.gambler.batch.TmnSelectDao;
import com.bestinfo.gambler.cache.CacheManager;
import com.bestinfo.gambler.protocols.ActionID;
import com.bestinfo.protocols.message.APPMessage;
import com.bestinfo.protocols.message.AppHeader;
import com.bestinfo.protocols.users.UserModifyInfoReg;
import com.bestinfo.protocols.users.UserModifyInfoRegRes;
import com.bestinfo.protocols.client.users.PUserModifyInfoClient;
import com.bestinfo.redis.login.DealerLoginRedis;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import javax.annotation.Resource;
import javax.swing.JOptionPane;
import org.apache.log4j.Logger;

/**
 *
 * @author J
 */
public class GamblerModify extends javax.swing.JFrame {

    private static Logger logger = Logger.getLogger(GamblerModify.class);

    @Resource
    private DealerLoginRedis dealerlogin;

    /**
     * Creates new form GamblerRegister
     */
    public GamblerModify() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sendtypexx = new javax.swing.JLabel();
        sendtype = new javax.swing.JTextField();
        dealer_idxxx = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        dealer_id = new javax.swing.JTextField();
        terminal_id = new javax.swing.JTextField();
        Mobile = new javax.swing.JTextField();
        Phone = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        CityId = new javax.swing.JTextField();
        Email = new javax.swing.JTextField();
        Sex = new javax.swing.JTextField();
        AccountTypeId = new javax.swing.JTextField();
        ChargeTypeId = new javax.swing.JTextField();
        PrizeTypeId = new javax.swing.JTextField();
        Birthday = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        GamblerName = new javax.swing.JTextField();
        GamblerPwd = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        terminal_id2 = new javax.swing.JTextField();
        terminal_id1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        sendtypexx.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        sendtypexx.setText("发送方类型");

        sendtype.setText("4");
        sendtype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendtypeActionPerformed(evt);
            }
        });

        dealer_idxxx.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        dealer_idxxx.setText("运营商id");

        jLabel3.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel3.setText("终端机号");

        jLabel4.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel4.setText("手机号");

        jLabel5.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel5.setText("电话号码");

        dealer_id.setText("146");

        terminal_id.setText("14610001");

        Mobile.setText("15101105612");

        Phone.setText("15101105612");

        jLabel6.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel6.setText("电子邮箱");

        jLabel7.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel7.setText("地市编号");

        jLabel8.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel8.setText("性别");

        jLabel9.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel9.setText("账户类型");

        jLabel10.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel10.setText("扣款类型");

        jLabel11.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel11.setText("奖金返奖类");

        jLabel12.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel12.setText("生日");

        CityId.setText("1");

        Email.setText("111111111@qq.com");

        Sex.setText("1");

        AccountTypeId.setText("3");

        ChargeTypeId.setText("0");

        PrizeTypeId.setText("0");

        Birthday.setText("1999-11-11");

        jLabel13.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel13.setText("用户名");

        jLabel14.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel14.setText("密码");

        GamblerName.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        GamblerName.setText("asda");
        GamblerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GamblerNameActionPerformed(evt);
            }
        });

        GamblerPwd.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        GamblerPwd.setText("sdasd");
        GamblerPwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GamblerPwdActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jButton1.setText("修改用户");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("身份证件类型：身份证1，军官证2，护照3;\n账户类型：移动1，电信2，联通3，网络11，自助终端12，彩吧21;\n扣款类型：本人账户1，运营商账户2，实时扣款3，不扣款4;\n奖金返奖类型：返还账户1，返还银行卡2，奖金累计3\n卡类型：信用卡1，借记卡2\n充值类型：支付宝1，银行卡2，充值卡3，话费4\n提款类型：支付宝1，银行卡2，手机话费3，现金4\n\n");
        jScrollPane1.setViewportView(jTextArea1);

        jLabel15.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel15.setText("form");

        jLabel16.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel16.setText("to");

        terminal_id2.setText("14610001");
        terminal_id2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terminal_id2ActionPerformed(evt);
            }
        });

        terminal_id1.setText("14610100");
        terminal_id1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terminal_id1ActionPerformed(evt);
            }
        });

        jButton2.setText("批量修改");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(dealer_idxxx)
                            .addComponent(sendtypexx)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel14)
                                .addComponent(jLabel13)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(sendtype)
                                .addComponent(Phone, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                                .addComponent(Mobile)
                                .addComponent(terminal_id)
                                .addComponent(dealer_id)
                                .addComponent(GamblerName))
                            .addComponent(GamblerPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(161, 161, 161)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(51, 51, 51))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(33, 33, 33)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Sex)
                                    .addComponent(CityId, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AccountTypeId)
                                    .addComponent(ChargeTypeId)
                                    .addComponent(PrizeTypeId)
                                    .addComponent(Birthday)
                                    .addComponent(Email, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)))
                            .addComponent(jLabel10)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addGap(22, 22, 22)
                                        .addComponent(terminal_id1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(terminal_id2, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)))
                                .addGap(96, 96, 96))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(sendtype, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sendtypexx)
                            .addComponent(jLabel6)))
                    .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(CityId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dealer_idxxx)
                    .addComponent(dealer_id, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(terminal_id, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addComponent(Sex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Mobile)
                    .addComponent(jLabel9)
                    .addComponent(AccountTypeId))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(Phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(ChargeTypeId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(PrizeTypeId, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(GamblerName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(Birthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(GamblerPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(terminal_id2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(terminal_id1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GamblerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GamblerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GamblerNameActionPerformed

    private void sendtypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendtypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sendtypeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            int actionID = ActionID.GAMBLER_UPDATE;
            //组装报文头<pkgH>
            AppHeader head = new AppHeader();
            head.setType(Integer.parseInt(sendtype.getText()));//发送方类型    自助终端运营商4
            head.setAction(actionID);//协议编号
            head.setVersion(0);//version版本号(填0)
            head.setDealer_id(dealer_id.getText());//head.setDealer_id("111");//运营商ID
            head.setTerminal_id(Integer.parseInt(terminal_id.getText()));//head.setTerminal_id("111");//终端机号
            head.setMobile(Mobile.getText());//手机号(填0)head.setMobile("15101105612");
            head.setPhone(Phone.getText());//电话号码(填0)   head.setPhone("15101105612");
            head.setSent_time(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));//发送时间head.setSent_time("2015-07-29 12:12:12");
            //head.setSign(new byte[0]);//head.setSign("1231321".getBytes());//报文体签名

            //组装报文内容<pkgC>
            UserModifyInfoReg req = new UserModifyInfoReg();
            req.setModifyTime(new Date());
            req.setGamblerName(GamblerName.getText());
            req.setGamblerPwd(GamblerPwd.getText());
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            try {
                req.setBirthday(sdf.parse(Birthday.getText()));
            } catch (Exception e) {
            }
            req.setSex(Integer.parseInt(Sex.getText()));
            //umir.setProvinceId(44);
            req.setCityId(Integer.parseInt(CityId.getText()));
            req.setAccountTypeId(Integer.parseInt(AccountTypeId.getText()));
            req.setChargeTypeId(Integer.parseInt(ChargeTypeId.getText()));
            req.setPrizeTypeId(Integer.parseInt(PrizeTypeId.getText()));

            PUserModifyInfoClient modifyInfo = new PUserModifyInfoClient();
            String requestxml = modifyInfo.generateXML(head, req);
            //把报文转换成XML

            // String requestxml = XmlFactoryClient.getInstance().getAppClientXF(actionID).generateXML(head, umir);
//            String str_key = null;
//            DealerLogin dl = dealerlogin.getDealerLoginInfo(Integer.parseInt(head.getDealer_id()), head.getTerminal_id());
//            if (dl != null && dl.getSessionkey() != null && !dl.getSessionkey().isEmpty()) {
//                str_key = dl.getSessionkey();
//                logger.error("Sessionkey:" + str_key);
//            }
//
//            System.out.println("key:" + str_key);
//            String sessionKey = (String) CacheManager.getCacheInfo("sessionKey").getValue();
//            logger.info("sessionKey is: " + sessionKey);
//            if (sessionKey == null) {
//                logger.info("sessionKey is null");
//            }
//            byte[] ret_key = NewSign.GetSign(requestxml, "d:/gdclient.p12", "gdtest@2015", "cosmos", sessionKey);
            //byte[] ret_key = NewSign.GetS(requestxml, "d:/gdtestp12.cer", str_key);
            //byte[] ret_key = NewSign.GetSign(s, FilePath.getStorePath(), FilePath.getAliaspwd(), FilePath.getAlias(), str_key);
            byte[] ret_key = NewSign.GetSign(requestxml, StaticVariable.privateKey, StaticVariable.SESSION);
            head.setBody_sign(ret_key);
            requestxml = modifyInfo.generateXML(head, req);

            //拼接发送XML
            String xml = "action=" + actionID + "&" + requestxml;
            System.out.println(xml);
            //发送xml并取回回复XML
            String responsexml = HttpSend.httpSend(StaticVariable.SERVERURL, xml);
            // String responsexml = HttpUtil.httpSend(xml, StaticVariable.SERVERURL, true);//StaticVariable.SERVERURL服务器地址
            //解析XML
            APPMessage ap = modifyInfo.parseXML(responsexml);
            //  APPMessage ap = XmlFactoryClient.getInstance().getAppClientXF(actionID).parseXML(responsexml);
            //回复报文
            UserModifyInfoRegRes tbrr = (UserModifyInfoRegRes) ap.getContent();//得到返回内容
            int resultcode = tbrr.getAppResResult().getResultCode();
            //输出结果
            if (resultcode == 0) {
                System.out.println("send successfull");
            } else {
                System.out.println(resultcode + "\t" + tbrr.getAppResResult().getResultDes());
            }
            JOptionPane.showMessageDialog(this, "返回码:" + resultcode + "结果:" + tbrr.getAppResResult().getResultDes(), "操作", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            logger.error(ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void GamblerPwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GamblerPwdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GamblerPwdActionPerformed

    private void terminal_id2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terminal_id2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_terminal_id2ActionPerformed

    private void terminal_id1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terminal_id1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_terminal_id1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            int actionID = ActionID.GAMBLER_UPDATE;
            int dealerid = Integer.parseInt(dealer_id.getText().trim());
            if (dealerid == 145 || dealerid == 146) {
                Set<Integer> set = new HashSet<>();
                int fromInt = Integer.parseInt(terminal_id2.getText().trim());
                int toInt = Integer.parseInt(terminal_id1.getText().trim());
                try {
                    //查询t_tmn_info表中的终端机号
                    TmnSelectDao.getTerminalId(dealerid, fromInt, toInt, set);
                } catch (Exception ex) {
                    java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(Level.SEVERE, null, ex);
                }
                logger.info("查询t_tmn_info表中的终端机号结果为 ：" + set.toString());
                long startTime=System.currentTimeMillis();
                for (Integer terminalid : set) {
                    AppHeader head = new AppHeader();
                    head.setType(Integer.parseInt(sendtype.getText()));//发送方类型    自助终端运营商4
                    head.setAction(actionID);//协议编号
                    head.setVersion(0);//version版本号(填0)
                    head.setDealer_id(dealer_id.getText());//head.setDealer_id("111");//运营商ID
                    head.setTerminal_id(terminalid);//head.setTerminal_id("111");//终端机号
                    head.setMobile(Mobile.getText());//手机号(填0)head.setMobile("15101105612");
                    head.setPhone(Phone.getText());//电话号码(填0)   head.setPhone("15101105612");
                    head.setSent_time(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));//发送时间head.setSent_time("2015-07-29 12:12:12");

                    //组装报文内容<pkgC>
                    UserModifyInfoReg req = new UserModifyInfoReg();
                    req.setModifyTime(new Date());
                    req.setGamblerName(GamblerName.getText());
                    req.setGamblerPwd(GamblerPwd.getText());
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    try {
                        req.setBirthday(sdf.parse(Birthday.getText()));
                    } catch (Exception e) {
                    }
                    req.setSex(Integer.parseInt(Sex.getText()));
                    //umir.setProvinceId(44);
                    req.setCityId(Integer.parseInt(CityId.getText()));
                    req.setAccountTypeId(Integer.parseInt(AccountTypeId.getText()));
                    req.setChargeTypeId(Integer.parseInt(ChargeTypeId.getText()));
                    req.setPrizeTypeId(Integer.parseInt(PrizeTypeId.getText()));

                    TaskManager.getInstance().execute(new BatchGamblerModifyTask(head, req));
                }
                long endtTime=System.currentTimeMillis();
            logger.info("共用时间是多少呢？？？:"+(endtTime-startTime)/1000F+"秒");
            } else {//140\141无自助终端
                List list = null;
                try {
                    //查询用户名列表
                    list = GamblerInfoDao.getGambInfo(dealer_id.getText());
                } catch (Exception ex) {
                    java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(Level.SEVERE, null, ex);
                }
                logger.info("查询t_tmn_info表中的终端机号结果为 ：" + list.toString());
                long startTime=System.currentTimeMillis();
                for (Object gamblerInfo : list) {
                    AppHeader head = new AppHeader();
                    head.setType(Integer.parseInt(sendtype.getText()));//发送方类型    自助终端运营商4
                    head.setAction(actionID);//协议编号
                    head.setVersion(0);//version版本号(填0)
                    head.setDealer_id(dealer_id.getText());//head.setDealer_id("111");//运营商ID
                    head.setTerminal_id(Integer.parseInt(terminal_id.getText()));//head.setTerminal_id("111");//终端机号
                    head.setMobile(Mobile.getText());//手机号(填0)head.setMobile("15101105612");
                    head.setPhone(Phone.getText());//电话号码(填0)   head.setPhone("15101105612");
                    head.setSent_time(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));//发送时间head.setSent_time("2015-07-29 12:12:12");

                    //组装报文内容<pkgC>
                    UserModifyInfoReg req = new UserModifyInfoReg();
                    req.setModifyTime(new Date());
                    req.setGamblerName(((GamblerInfo) gamblerInfo).getGambler_name());
                    req.setGamblerPwd(((GamblerInfo) gamblerInfo).getPwd());
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    try {
                        req.setBirthday(sdf.parse(Birthday.getText()));
                    } catch (Exception e) {
                    }
                    req.setSex(Integer.parseInt(Sex.getText()));
                    //umir.setProvinceId(44);
                    req.setCityId(Integer.parseInt(CityId.getText()));
                    req.setAccountTypeId(Integer.parseInt(AccountTypeId.getText()));
                    req.setChargeTypeId(Integer.parseInt(ChargeTypeId.getText()));
                    req.setPrizeTypeId(Integer.parseInt(PrizeTypeId.getText()));

                    TaskManager.getInstance().execute(new BatchGamblerModifyTask(head, req));
                }
                long endtTime=System.currentTimeMillis();
            logger.info("共用时间是多少呢？？？:"+(endtTime-startTime)/1000F+"秒");
            }
        } catch (Exception ex) {
            logger.error(ex);
        }        // TODO add your handli
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GamblerModify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GamblerModify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GamblerModify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GamblerModify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GamblerModify().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AccountTypeId;
    private javax.swing.JTextField Birthday;
    private javax.swing.JTextField ChargeTypeId;
    private javax.swing.JTextField CityId;
    private javax.swing.JTextField Email;
    private javax.swing.JTextField GamblerName;
    private javax.swing.JTextField GamblerPwd;
    private javax.swing.JTextField Mobile;
    private javax.swing.JTextField Phone;
    private javax.swing.JTextField PrizeTypeId;
    private javax.swing.JTextField Sex;
    private javax.swing.JTextField dealer_id;
    private javax.swing.JLabel dealer_idxxx;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField sendtype;
    private javax.swing.JLabel sendtypexx;
    private javax.swing.JTextField terminal_id;
    private javax.swing.JTextField terminal_id1;
    private javax.swing.JTextField terminal_id2;
    // End of variables declaration//GEN-END:variables
}
