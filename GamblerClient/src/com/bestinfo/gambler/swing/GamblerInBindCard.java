/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bestinfo.gambler.swing;

import com.bestinfo.arithmetic.NewSign;
import com.bestinfo.gambler.all.StaticVariable;
import com.bestinfo.gambler.all.HttpSend;
import com.bestinfo.gambler.batch.BatcBindCardTask;
import com.bestinfo.gambler.batch.BatcUnBindCardTask;
import com.bestinfo.gambler.batch.GamblerInfo;
import com.bestinfo.gambler.batch.GamblerInfoDao;
import com.bestinfo.gambler.batch.TaskManager;
import com.bestinfo.gambler.batch.TmnSelectDao;
import com.bestinfo.gambler.cache.CacheManager;
import com.bestinfo.gambler.protocols.ActionID;
import com.bestinfo.protocols.message.APPMessage;
import com.bestinfo.protocols.message.AppHeader;
import com.bestinfo.protocols.users.UserBindCardReq;
import com.bestinfo.protocols.users.UserBindCardReqRes;
import com.bestinfo.protocols.users.UserRemoveBindCardReq;
import com.bestinfo.protocols.users.UserRemoveBindCardReqRes;
import com.bestinfo.protocols.client.users.PUserBindCardClient;
import com.bestinfo.protocols.client.users.PUserRemoveBindCardClient;
import com.bestinfo.redis.login.DealerLoginRedis;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import javax.annotation.Resource;
import javax.swing.JOptionPane;
import org.apache.log4j.Logger;

/**
 *
 * @author J
 */
public class GamblerInBindCard extends javax.swing.JFrame {

    private static final Logger logger = Logger.getLogger(GamblerInBindCard.class);

    @Resource
    private DealerLoginRedis dealerlogin;

    /**
     * Creates new form GamblerInBindCard
     */
    public GamblerInBindCard() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        sendtype = new javax.swing.JTextField();
        dealer_id = new javax.swing.JTextField();
        terminal_id = new javax.swing.JTextField();
        Mobile = new javax.swing.JTextField();
        Phone = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        GamblerName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        IdType = new javax.swing.JTextField();
        IdNo = new javax.swing.JTextField();
        CardType = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        BankId = new javax.swing.JTextField();
        BankCard = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        GamblerPwd = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        terminal_id2 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        terminal_id3 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel1.setText("发送方类型");

        jLabel2.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel2.setText("运营商id");

        jLabel3.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel3.setText("终端机号");

        jLabel4.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel4.setText("手机号");

        jLabel5.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel5.setText("电话号码");

        sendtype.setText("4");
        sendtype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendtypeActionPerformed(evt);
            }
        });

        dealer_id.setText("146");

        terminal_id.setText("14610001");

        Mobile.setText("15101105612");

        Phone.setText("15101105612");

        jLabel6.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel6.setText("用户标识");

        GamblerName.setText("asda");

        jLabel7.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel7.setText("身份证件类型");

        jLabel8.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel8.setText("身份证件编号");

        jLabel9.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel9.setText("卡类型");

        jLabel10.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel10.setText("银行编码");

        jLabel11.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel11.setText("绑定卡号");

        IdType.setText("1");

        IdNo.setText("652722196903038090");

        CardType.setText("2");

        jButton1.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jButton1.setText("绑定银行卡");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jButton2.setText("解绑银行卡");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnBind(evt);
            }
        });

        BankId.setText("1003");

        BankCard.setText("12345678911");

        jLabel12.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel12.setText("密码");

        GamblerPwd.setText("rrr");

        jLabel13.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel13.setText("form");

        terminal_id2.setText("14610001");
        terminal_id2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terminal_id2ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel14.setText("to");

        terminal_id3.setText("14610100");
        terminal_id3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terminal_id3ActionPerformed(evt);
            }
        });

        jButton3.setText("批量绑定");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("批量解绑");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(terminal_id, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                            .addComponent(dealer_id))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(sendtype)
                                .addComponent(Mobile, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel14)
                                .addComponent(Phone, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(BankCard, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                        .addComponent(IdType, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(CardType)
                                        .addComponent(BankId))
                                    .addComponent(IdNo, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(GamblerName, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(GamblerPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(terminal_id3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jButton4)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(terminal_id2))
                            .addComponent(jButton1))
                        .addGap(97, 97, 97)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(sendtype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(GamblerName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(GamblerPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(dealer_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(IdType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(terminal_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(IdNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(Mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Phone, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(CardType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BankId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BankCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(terminal_id2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(terminal_id3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            int actionID = ActionID.GAMBLER_BINDCARD;
            //组装报文头<pkgH>
            AppHeader head = new AppHeader();
            head.setType(Integer.parseInt(sendtype.getText()));//发送方类型    自助终端运营商4
            head.setAction(actionID);//协议编号
            head.setVersion(0);//version版本号(填0)
            head.setDealer_id(dealer_id.getText());//head.setDealer_id("111");//运营商ID
            head.setTerminal_id(Integer.parseInt(terminal_id.getText()));//head.setTerminal_id("111");//终端机号
            head.setMobile(Mobile.getText());//手机号(填0)head.setMobile("15101105612");
            head.setPhone(Phone.getText());//电话号码(填0)   head.setPhone("15101105612");
            head.setSent_time(new Date().toString());//发送时间head.setSent_time("2015-07-29 12:12:12");
            //head.setSign(new byte[0]);//head.setSign("1231321".getBytes());//报文体签名

            //组装报文内容<pkgC>
            UserBindCardReq req = new UserBindCardReq();
            req.setGamblerName(GamblerName.getText());
            req.setGamblerPwd(GamblerPwd.getText());
            req.setIdNo(IdNo.getText());
            req.setIdType(Integer.parseInt(IdType.getText()));
            req.setCardType(Integer.parseInt(CardType.getText()));
            req.setBankCard(BankCard.getText());
            req.setBankId(BankId.getText());

            PUserBindCardClient bindCard = new PUserBindCardClient();
            String requestxml = bindCard.generateXML(head, req);

            //把报文转换成XML
            //String requestxml = XmlFactoryClient.getInstance().getAppClientXF(actionID).generateXML(head, req);
//            String str_key = null;
//            DealerLogin dl = dealerlogin.getDealerLoginInfo(Integer.parseInt(head.getDealer_id()), head.getTerminal_id());
//            if (dl != null && dl.getSessionkey() != null && !dl.getSessionkey().isEmpty()) {
//                str_key = dl.getSessionkey();
//                logger.error("Sessionkey:" + str_key);
//            }
//
////            System.out.println("key:" + str_key);
//            String sessionKey = (String) CacheManager.getCacheInfo("sessionKey").getValue();
//            logger.info("sessionKey is: " + sessionKey);
//            if (sessionKey == null) {
//                logger.info("sessionKey is null");
//            }
//            byte[] ret_key = NewSign.GetSign(requestxml, "d:/gdclient.p12", "gdtest@2015", "cosmos", sessionKey);
            //byte[] ret_key = NewSign.GetS(requestxml, "d:/gdtestp12.cer", str_key);
            //byte[] ret_key = NewSign.GetSign(s, FilePath.getStorePath(), FilePath.getAliaspwd(), FilePath.getAlias(), str_key);
            byte[] ret_key = NewSign.GetSign(requestxml, StaticVariable.privateKey, StaticVariable.SESSION);
            head.setBody_sign(ret_key);
            requestxml = bindCard.generateXML(head, req);

            //拼接发送XML
            String xml = "action=" + actionID + "&" + requestxml;
            System.out.println(xml);
            //发送xml并取回回复XML
            String responsexml = HttpSend.httpSend(StaticVariable.SERVERURL, xml);
            // String responsexml = HttpUtil.httpSend(xml, StaticVariable.SERVERURL, true);//StaticVariable.SERVERURL服务器地址
            //解析XML
            APPMessage ap = bindCard.parseXML(responsexml);

            // APPMessage ap = XmlFactoryClient.getInstance().getAppClientXF(actionID).parseXML(responsexml);
            //回复报文
            UserBindCardReqRes tbrr = (UserBindCardReqRes) ap.getContent();//得到返回内容
            int resultcode = tbrr.getAppResResult().getResultCode();
            //输出结果
            if (resultcode == 0) {
                System.out.println("send successfull");
            } else {
                System.out.println(resultcode + "\t" + tbrr.getAppResResult().getResultDes());
            }
            JOptionPane.showMessageDialog(this, "返回码:" + resultcode + "结果:" + tbrr.getAppResResult().getResultDes(), "操作", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            logger.error(ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void UnBind(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnBind
        try {
            int actionID = ActionID.GAMBLER_UNBINDCARD;
            //组装报文头<pkgH>
            AppHeader head = new AppHeader();
            head.setType(Integer.parseInt(sendtype.getText()));//发送方类型    自助终端运营商4
            head.setAction(actionID);//协议编号
            head.setVersion(0);//version版本号(填0)
            head.setDealer_id(dealer_id.getText());//head.setDealer_id("111");//运营商ID
            head.setTerminal_id(Integer.parseInt(terminal_id.getText()));//head.setTerminal_id("111");//终端机号
            head.setMobile(Mobile.getText());//手机号(填0)head.setMobile("15101105612");
            head.setPhone(Phone.getText());//电话号码(填0)   head.setPhone("15101105612");
            head.setSent_time(new Date().toString());//发送时间head.setSent_time("2015-07-29 12:12:12");
            //  head.setSign(new byte[0]);//head.setSign("1231321".getBytes());//报文体签名

            //组装报文内容<pkgC>
            UserRemoveBindCardReq req = new UserRemoveBindCardReq();
            req.setGamblerName(GamblerName.getText());
            req.setGamblerPwd(GamblerPwd.getText());
            req.setIdType(Integer.parseInt(IdType.getText()));
            req.setIdNo(IdNo.getText());
            //把报文转换成XML
            PUserRemoveBindCardClient removeBindCard = new PUserRemoveBindCardClient();
            String requestxml = removeBindCard.generateXML(head, req);
            //String requestxml = XmlFactoryClient.getInstance().getAppClientXF(actionID).generateXML(head, ur);
//            String str_key = null;
//            DealerLoginRedis dealerlogin =new DealerLoginRedis();
//            DealerLogin dl = dealerlogin.getDealerLoginInfo(Integer.parseInt(head.getDealer_id()), head.getTerminal_id());
//            if (dl != null && dl.getSessionkey() != null && !dl.getSessionkey().isEmpty()) {
//                str_key = dl.getSessionkey();
//                logger.error("Sessionkey:" + str_key);
//            }
//
//            System.out.println("key:" + str_key);
//            String sessionKey = (String) CacheManager.getCacheInfo("sessionKey").getValue();
//            logger.info("sessionKey is: " + sessionKey);
//            if (sessionKey == null) {
//                logger.info("sessionKey is null");
//            }
//            byte[] ret_key = NewSign.GetSign(requestxml, "d:/gdclient.p12", "gdtest@2015", "cosmos", sessionKey);
            byte[] ret_key = NewSign.GetSign(requestxml, StaticVariable.privateKey, StaticVariable.SESSION);
            //byte[] ret_key = NewSign.GetSign(s, FilePath.getStorePath(), FilePath.getAliaspwd(), FilePath.getAlias(), str_key);
            head.setBody_sign(ret_key);
            requestxml = removeBindCard.generateXML(head, req);

            //拼接发送XML
            String xml = "action=" + actionID + "&" + requestxml;
            System.out.println(xml);
            //发送xml并取回回复XML
            String responsexml = HttpSend.httpSend(StaticVariable.SERVERURL, xml);
            // String responsexml = HttpUtil.httpSend(xml, StaticVariable.SERVERURL, true);//StaticVariable.SERVERURL服务器地址
            //解析XML
            APPMessage ap = removeBindCard.parseXML(responsexml);

            // APPMessage ap =  XmlFactoryClient.getInstance().getAppClientXF(actionID).parseXML(responsexml);
            //回复报文
            UserRemoveBindCardReqRes tbrr = (UserRemoveBindCardReqRes) ap.getContent();//得到返回内容
            int resultcode = tbrr.getAppResResult().getResultCode();
            //输出结果
            if (resultcode == 0) {
                System.out.println("send successfull");
            } else {
                System.out.println(resultcode + "\t" + tbrr.getAppResResult().getResultDes());
            }
            JOptionPane.showMessageDialog(this, "返回码:" + resultcode + "结果:" + tbrr.getAppResResult().getResultDes(), "操作", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            logger.error(ex);
        }

    }//GEN-LAST:event_UnBind

    private void sendtypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendtypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sendtypeActionPerformed

    private void terminal_id2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terminal_id2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_terminal_id2ActionPerformed

    private void terminal_id3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terminal_id3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_terminal_id3ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            int actionID = ActionID.GAMBLER_BINDCARD;
            int dealerid = Integer.parseInt(dealer_id.getText().trim());
            if (dealerid == 145 || dealerid == 146) {
                Set<Integer> set = new HashSet<>();
                int fromInt = Integer.parseInt(terminal_id2.getText().trim());
                int toInt = Integer.parseInt(terminal_id3.getText().trim());
                try {
                    //查询t_tmn_info表中的终端机号
                    TmnSelectDao.getTerminalId(dealerid, fromInt, toInt, set);
                } catch (Exception ex) {
                    java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(Level.SEVERE, null, ex);
                }
                logger.info("查询t_tmn_info表中的终端机号结果为 ：" + set.toString());
                long startTime = System.currentTimeMillis();
                for (Integer terminalid : set) {
                    AppHeader head = new AppHeader();
                    head.setType(Integer.parseInt(sendtype.getText()));//发送方类型    自助终端运营商4
                    head.setAction(actionID);//协议编号
                    head.setVersion(0);//version版本号(填0)
                    head.setDealer_id(dealer_id.getText());//head.setDealer_id("111");//运营商ID
                    head.setTerminal_id(terminalid);
                    //head.setTerminal_id("111");//终端机号
                    head.setMobile(Mobile.getText());//手机号(填0)head.setMobile("15101105612");
                    head.setPhone(Phone.getText());//电话号码(填0)   head.setPhone("15101105612");
                    head.setSent_time(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));//发送时间head.setSent_time("2015-07-29 12:12:12");
                    //组装报文内容<pkgC>
                    UserBindCardReq req = new UserBindCardReq();
                    req.setGamblerName(GamblerName.getText());
                    req.setGamblerPwd(GamblerPwd.getText());
                    req.setIdNo(IdNo.getText());
                    req.setIdType(Integer.parseInt(IdType.getText()));
                    req.setCardType(Integer.parseInt(CardType.getText()));
                    req.setBankCard(BankCard.getText());
                    req.setBankId(BankId.getText());
                    TaskManager.getInstance().execute(new BatcBindCardTask(head, req));
                }
                long endtTime = System.currentTimeMillis();
                logger.info("共用时间是多少呢？？？:" + (endtTime - startTime) / 1000F + "秒");
            } else {//140\141无自助终端
                List list = null;
                try {
                    //查询用户名列表
                    list = GamblerInfoDao.getGambInfo(dealer_id.getText());
                } catch (Exception ex) {
                    java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(Level.SEVERE, null, ex);
                }
                logger.info("查询t_tmn_info表中的终端机号结果为 ：" + list.toString());
                long startTime = System.currentTimeMillis();
                for (Object gamblerInfo : list) {
                    AppHeader head = new AppHeader();
                    head.setType(Integer.parseInt(sendtype.getText()));//发送方类型    自助终端运营商4
                    head.setAction(actionID);//协议编号
                    head.setVersion(0);//version版本号(填0)
                    head.setDealer_id(dealer_id.getText());//head.setDealer_id("111");//运营商ID
                    head.setTerminal_id(Integer.parseInt(terminal_id.getText()));//head.setTerminal_id("111");//终端机号
                    head.setMobile(Mobile.getText());//手机号(填0)head.setMobile("15101105612");
                    head.setPhone(Phone.getText());//电话号码(填0)   head.setPhone("15101105612");
                    head.setSent_time(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));//发送时间head.setSent_time("2015-07-29 12:12:12");
                    //组装报文内容<pkgC>
                    UserBindCardReq req = new UserBindCardReq();
                    req.setGamblerName(((GamblerInfo) gamblerInfo).getGambler_name());
                    req.setGamblerPwd(((GamblerInfo) gamblerInfo).getPwd());
                    req.setIdNo(IdNo.getText());
                    req.setIdType(Integer.parseInt(IdType.getText()));
                    req.setCardType(Integer.parseInt(CardType.getText()));
                    req.setBankCard(BankCard.getText());
                    req.setBankId(BankId.getText());

                    TaskManager.getInstance().execute(new BatcBindCardTask(head, req));
                }
                long endtTime = System.currentTimeMillis();
                logger.info("共用时间是多少呢？？？:" + (endtTime - startTime) / 1000F + "秒");
            }
        } catch (Exception ex) {
            logger.error(ex);
        }        // TODO add your handlin
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            int actionID = ActionID.GAMBLER_UNBINDCARD;
            int dealerid = Integer.parseInt(dealer_id.getText().trim());
            if (dealerid == 145 || dealerid == 146) {
                Set<Integer> set = new HashSet<>();
                int fromInt = Integer.parseInt(terminal_id2.getText().trim());
                int toInt = Integer.parseInt(terminal_id3.getText().trim());
                try {
                    //查询t_tmn_info表中的终端机号
                    TmnSelectDao.getTerminalId(dealerid, fromInt, toInt, set);
                } catch (Exception ex) {
                    java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(Level.SEVERE, null, ex);
                }
                logger.info("查询t_tmn_info表中的终端机号结果为 ：" + set.toString());
                long startTime = System.currentTimeMillis();
                for (Integer terminalid : set) {
                    AppHeader head = new AppHeader();
                    head.setType(Integer.parseInt(sendtype.getText()));//发送方类型    自助终端运营商4
                    head.setAction(actionID);//协议编号
                    head.setVersion(0);//version版本号(填0)
                    head.setDealer_id(dealer_id.getText());//head.setDealer_id("111");//运营商ID
                    head.setTerminal_id(terminalid);
                    //head.setTerminal_id("111");//终端机号
                    head.setMobile(Mobile.getText());//手机号(填0)head.setMobile("15101105612");
                    head.setPhone(Phone.getText());//电话号码(填0)   head.setPhone("15101105612");
                    head.setSent_time(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));//发送时间head.setSent_time("2015-07-29 12:12:12");
                    //组装报文内容<pkgC>
                    //组装报文内容<pkgC>
                    UserRemoveBindCardReq req = new UserRemoveBindCardReq();
                    req.setGamblerName(GamblerName.getText());
                    req.setGamblerPwd(GamblerPwd.getText());
                    req.setIdType(Integer.parseInt(IdType.getText()));
                    req.setIdNo(IdNo.getText());
                    TaskManager.getInstance().execute(new BatcUnBindCardTask(head, req));
                }
                long endtTime = System.currentTimeMillis();
                logger.info("共用时间是多少呢？？？:" + (endtTime - startTime) / 1000F + "秒");
            } else {//140\141无自助终端
                List list = null;
                try {
                    //查询用户名列表
                    list = GamblerInfoDao.getGambInfo(dealer_id.getText());
                } catch (Exception ex) {
                    java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(Level.SEVERE, null, ex);
                }
                logger.info("查询t_tmn_info表中的终端机号结果为 ：" + list.toString());
                long startTime = System.currentTimeMillis();
                for (Object gamblerInfo : list) {
                    AppHeader head = new AppHeader();
                    head.setType(Integer.parseInt(sendtype.getText()));//发送方类型    自助终端运营商4
                    head.setAction(actionID);//协议编号
                    head.setVersion(0);//version版本号(填0)
                    head.setDealer_id(dealer_id.getText());//head.setDealer_id("111");//运营商ID
                    head.setTerminal_id(Integer.parseInt(terminal_id.getText()));//head.setTerminal_id("111");//终端机号
                    head.setMobile(Mobile.getText());//手机号(填0)head.setMobile("15101105612");
                    head.setPhone(Phone.getText());//电话号码(填0)   head.setPhone("15101105612");
                    head.setSent_time(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));//发送时间head.setSent_time("2015-07-29 12:12:12");
                    //组装报文内容<pkgC>
                    UserRemoveBindCardReq req = new UserRemoveBindCardReq();
                    req.setGamblerName(((GamblerInfo) gamblerInfo).getGambler_name());
                    req.setGamblerPwd(((GamblerInfo) gamblerInfo).getPwd());
                    req.setIdType(Integer.parseInt(IdType.getText()));
                    req.setIdNo(IdNo.getText());
                    TaskManager.getInstance().execute(new BatcUnBindCardTask(head, req));
                }
                long endtTime = System.currentTimeMillis();
                logger.info("共用时间是多少呢？？？:" + (endtTime - startTime) / 1000F + "秒");
            }
        } catch (Exception ex) {
            logger.error(ex);
        }        // TODO add your handlin
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GamblerInBindCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GamblerInBindCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GamblerInBindCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GamblerInBindCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GamblerInBindCard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BankCard;
    private javax.swing.JTextField BankId;
    private javax.swing.JTextField CardType;
    private javax.swing.JTextField GamblerName;
    private javax.swing.JTextField GamblerPwd;
    private javax.swing.JTextField IdNo;
    private javax.swing.JTextField IdType;
    private javax.swing.JTextField Mobile;
    private javax.swing.JTextField Phone;
    private javax.swing.JTextField dealer_id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField sendtype;
    private javax.swing.JTextField terminal_id;
    private javax.swing.JTextField terminal_id2;
    private javax.swing.JTextField terminal_id3;
    // End of variables declaration//GEN-END:variables
}
