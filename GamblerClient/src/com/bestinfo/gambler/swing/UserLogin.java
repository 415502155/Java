/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bestinfo.gambler.swing;

import com.bestinfo.arithmetic.CaTool;
import com.bestinfo.arithmetic.DataChange;
import com.bestinfo.arithmetic.NewSign;
import com.bestinfo.gambler.all.StaticVariable;
import com.bestinfo.gambler.all.HttpSend;
import com.bestinfo.gambler.batch.BatchCacelTask;
import com.bestinfo.gambler.batch.TmnSelectDao;
import com.bestinfo.gambler.batch.TaskManager;
import com.bestinfo.gambler.batch.BatchLoginTask;
import com.bestinfo.gambler.batch.GamblerInfo;
import com.bestinfo.gambler.batch.GamblerInfoDao;
import com.bestinfo.gambler.createBetNumber.Count;
import com.bestinfo.gambler.protocols.ActionID;
import com.bestinfo.gambler.user.CreateUserLoginXmlAndSend;
import com.bestinfo.protocols.message.APPMessage;
import com.bestinfo.protocols.message.AppHeader;
import com.bestinfo.protocols.users.RoleLogoutRes;
import com.bestinfo.protocols.users.UserCancelReq;
import com.bestinfo.protocols.users.UserCancelReqRes;
import com.bestinfo.protocols.users.UserLoginReq;
import com.bestinfo.protocols.users.UserLoginReqRes;
import com.bestinfo.protocols.client.users.PRoleLoginClient;
import com.bestinfo.protocols.client.users.PRoleLogoutClient;
import com.bestinfo.protocols.client.users.PUserCancelClient;
import com.bestinfo.redis.login.DealerLoginRedis;
import com.sun.org.apache.xerces.internal.impl.dv.util.Base64;
import java.io.File;
import java.io.UnsupportedEncodingException;
import java.security.PublicKey;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import javax.annotation.Resource;
import javax.swing.JOptionPane;
import org.apache.log4j.Logger;

/**
 *
 * @author J
 */
public class UserLogin extends javax.swing.JFrame {

    private static final Logger logger = Logger.getLogger(UserLogin.class);

    @Resource
    private DealerLoginRedis dealerlogin;

    /**
     * Creates new form UserLogin
     */
    public UserLogin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        sendtype = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        dealer_id = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        terminal_id = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Mobile = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        GamblerName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        GamblerPwd = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        Phone = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        userno = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        eachnum = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        to = new javax.swing.JTextField();
        from = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel47 = new javax.swing.JLabel();
        eachnum1 = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        eachnum2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel1.setText("发送方类型");

        sendtype.setText("3");
        sendtype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendtypeActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel2.setText("运营商ID");

        dealer_id.setText("160");

        jLabel3.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel3.setText("终端机号");

        terminal_id.setText("100");
        terminal_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terminal_idActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel4.setText("手机号");

        Mobile.setText("0");
        Mobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MobileActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel5.setText("from");

        GamblerName.setText("test_admin");
        GamblerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GamblerNameActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel6.setText("密码");

        GamblerPwd.setText("111111");

        jButton1.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jButton1.setText("登录");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
                login(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel7.setText("电话号码");

        Phone.setText("0");

        jButton2.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jButton2.setText("退出");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jButton3.setText("注销");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cancle(evt);
            }
        });

        jLabel8.setText("用户个数：");

        userno.setText("1");

        jLabel9.setText("每用户次数：");

        eachnum.setText("1");

        jButton4.setText("批量发送用户数据");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel10.setText("注意：用户个数不能为空");

        jButton5.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jButton5.setText("批量登录");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
                batchLogin(evt);
            }
        });

        to.setText("14610100");
        to.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toActionPerformed(evt);
            }
        });

        from.setText("14610001");
        from.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel11.setText("用户名");

        jLabel12.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel12.setText("to");

        jButton6.setText("批量注销");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel47.setText("成功数目：");

        eachnum1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eachnum1ActionPerformed(evt);
            }
        });

        jLabel48.setText("用时");

        eachnum2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eachnum2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(userno, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(eachnum, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(377, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Phone, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(GamblerName, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(Mobile))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE))
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(terminal_id, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                                        .addComponent(sendtype)
                                        .addComponent(dealer_id)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton1))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(GamblerPwd)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jButton2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton3))))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton5))
                                    .addComponent(jLabel48))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(eachnum2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel47)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(eachnum1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(from, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(44, 44, 44))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(sendtype))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dealer_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(terminal_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Phone, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(from, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel47)
                        .addComponent(eachnum1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(GamblerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(GamblerPwd)
                        .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel48)
                        .addComponent(eachnum2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3)
                        .addComponent(jButton2)
                        .addComponent(jButton1)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(userno, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(eachnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap(107, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendtypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendtypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sendtypeActionPerformed

    private void terminal_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terminal_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_terminal_idActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void login(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_login
        try {
            AppHeader head = new AppHeader();
            head.setType(Integer.parseInt(sendtype.getText()));//head.setType(1);//发送方类型
            head.setAction(ActionID.GAMBLER_LOGIN);//协议编号
            head.setVersion(0);//version版本号(填0)
            head.setDealer_id(dealer_id.getText().trim());//head.setDealer_id("111");//运营商ID
            head.setTerminal_id(Integer.parseInt(terminal_id.getText().trim()));//head.setTerminal_id("111");//终端机号
            head.setMobile(Mobile.getText());//手机号(填0)head.setMobile("15101105612");
            head.setPhone(Phone.getText());//电话号码(填0)   head.setPhone("15101105612");
            head.setSent_time(new Date().toString());//发送时间head.setSent_time("2015-07-29 12:12:12");
            // head.setBody_sign(new byte[0]);//head.setSign("1231321".getBytes());//报文体签名
            
            //组装报文内容<pkgC>
            UserLoginReq ur = new UserLoginReq();
            
            CaTool ct = new CaTool();
            DataChange dc = new DataChange();
//        System.out.println("path is:" + "e:\\gamb\\" + head.getDealer_id() + ".cer");
//            PublicKey pk = ct.getPublicKey("e:\\gamb\\" + head.getDealer_id() + ".cer");
            System.out.println("public key path is:" + "e:\\gamb\\gdtestp12.cer");
            File dir = new File("");
            String path = dir.getAbsolutePath();
            PublicKey pk = ct.getPublicKey("e:\\gamb\\gdtestp12.cer");
            //PublicKey pk = ct.getPublicKey(path + "\\gamb\\gdtestp12.cer");
            //System.out.println("publickey====:"+ct.publickeyToPemString("e:/gd.p12", "gdtest@2015", "cosmos") );
            //InputStream st = new InputStream("") ;
            // PublicKey pk = ct.getPublicKey("d:/gdtestp12.cer");
            /* PublicKey pk = ct.getPublicKey("MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnOSdqIHqpkVett4Aq0Mr"
            + "Wd+NY9o3cODLyqAf58NP8uJT+Kut3iRwuBpTtCAUjnyEFXhNWYa7nytYrdHzqqOj"
            + "QdFrtkQZF8xoanIcFNSic834eLpu67e8Jzy/nlPsHL/pAvMYX9lS8RT/ocax2Mra"
            + "Bdxj/ofRNWTmrd3FNUvNoF4W+ZDFcrg4nFLRCUhK82ZpfXmxiMV9DFl+lYMKycXT"
            + "fkrNAn2GaR/ee+GEJmMWKWX6NWpjklWseNvDnuMc6UGBzsQKwiXoONnG973w12Jj"
            + "uuWD2oAehuwB/g4eDYHFvqEZFRq2xSH82kNSHrcESMagPMBXZWU35J2s1HdRKLol"
            + "lQIDAQAB");*/
            // PublicKey pk = ct.getPublicKey("e:/gd.p12", "gdtest@2015", "cosmos");
            // PrivateKey prk = ct.getPrivateKey("e:/gd.p12", "gdtest@2015", "cosmos", "gdtest@2015");
            
            byte[] bname = GamblerName.getText().getBytes("UTF-8");
            byte[] bpwd = GamblerPwd.getText().getBytes();
            
            byte[] name_enc = ct.encryptByPublicKey(bname, pk);
            byte[] pwd_enc = ct.encryptByPublicKey(bpwd, pk);
            
            String sname = dc.bytes2HexString(name_enc);
            String spwd = dc.bytes2HexString(pwd_enc);
            ur.setGamblerName(sname);
            ur.setGamblerPwd(spwd);
//        ur.setGamblerName(GamblerName.getText().trim());
//        ur.setGamblerPwd(GamblerPwd.getText().trim());
            PRoleLoginClient login = new PRoleLoginClient();
            // PRoleLoginServer login = new PRoleLoginServer();
            /*  byte[] gname_enc = dc.hexString2Bytes(sname.toString());
            byte[] gname_dec = ct.decryptByPrivateKey(gname_enc, prk);
            
            String s_dec = new String(gname_dec);
            System.out.println(s_dec);*/
            //把报文转换成XML
            String userxml = login.generateXML(head, ur);
            // String userxml = XmlFactoryClient.getInstance().getAppClientXF(ActionID.GAMBLER_LOGIN).generateXML(head, ur);
            //拼接发送XML
            String xml = "action=" + ActionID.GAMBLER_LOGIN + "&" + userxml;
            System.out.println("拼接发送XML:" + xml);
            //发送xml并取回回复XML
            String responsexml = HttpSend.httpSend(StaticVariable.SERVERURL, xml);
            // String responsexml = HttpUtil.httpSend(xml, StaticVariable.SERVERURL, true);//StaticVariable.SERVERURL服务器地址
            if (responsexml == null || responsexml.isEmpty()) {
                return;
            }
            //解析XML
            APPMessage ap = login.parseXML(responsexml);
            // APPMessage ap = XmlFactoryClient.getInstance().getAppClientXF(ActionID.GAMBLER_LOGIN).parseXML(responsexml);
            //回复报文
            UserLoginReqRes tbrr = (UserLoginReqRes) ap.getContent();//得到返回内容
            int resultcode = tbrr.getAppResResult().getResultCode();
            System.out.println("KEY:" + tbrr.getSession_key());
            
            //输出结果
            if (resultcode == 0) {
                byte[] b_s_key = Base64.decode(tbrr.getSession_key());//dc.hexString2Bytes(tbrr.getSession_key()) ;
                byte[] pwd_dec = ct.decryptByPrivateKey(b_s_key, StaticVariable.privateKey);
                logger.info("返回sessionKey: " + Base64.encode(pwd_dec));
                StaticVariable.SESSION = Base64.encode(pwd_dec);
//            Cache d = new Cache();
////            logger.info("返回sessionKey: "+dc.bytes2HexString(pwd_dec));
////            d.setValue(dc.bytes2HexString(pwd_dec));
//            logger.info("返回sessionKey: " + Base64.encode(pwd_dec));
//            d.setValue(Base64.encode(pwd_dec));
////            int dealerid = Integer.parseInt(dealer_id.getText().trim());
////            if(dealerid == 145 ||dealerid == 146){ 
////                String terminal_id = String.valueOf(head.getTerminal_id());//请求的终端机号
////                CacheManager.putCache(terminal_id, d);//将响应信息 以一个终端机号对应一个sessionkey的形式缓存
////                System.out.println(CacheManager.getCacheInfo(terminal_id).getValue()) ;
////            }else{
//            CacheManager.putCache("sessionKey"+"", d);//将响应信息 以一个终端机号对应一个sessionkey的形式缓存
//            System.out.println(CacheManager.getCacheInfo("sessionKey").getValue());
//            }
                System.out.println("操作成功" + resultcode + "\t" + tbrr.getAppResResult().getResultDes());
            } else {
                System.out.println(resultcode + "\t" + tbrr.getAppResResult().getResultDes());
            }
            JOptionPane.showMessageDialog(this, "返回码:" + resultcode + "结果:" + tbrr.getAppResResult().getResultDes(), "操作", JOptionPane.INFORMATION_MESSAGE);
        } catch (UnsupportedEncodingException ex) {
            java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_login

    private void MobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MobileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MobileActionPerformed

    private void GamblerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GamblerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GamblerNameActionPerformed

    private void logout(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout
        try {
            AppHeader head = new AppHeader();
            head.setType(Integer.parseInt(sendtype.getText()));//head.setType(1);//发送方类型
            head.setAction(ActionID.GAMBLER_LOGOUT);//协议编号
            head.setVersion(0);//version版本号(填0)
            head.setDealer_id(dealer_id.getText().trim());//head.setDealer_id("111");//运营商ID
            head.setTerminal_id(Integer.parseInt(terminal_id.getText().trim()));//head.setTerminal_id("111");//终端机号
            head.setMobile(Mobile.getText());//手机号(填0)head.setMobile("15101105612");
            head.setPhone(Phone.getText());//电话号码(填0)   head.setPhone("15101105612");
            head.setSent_time(new Date().toString());//发送时间head.setSent_time("2015-07-29 12:12:12");
            // head.setSign(new byte[0]);//head.setSign("1231321".getBytes());//报文体签名
            RoleLogoutRes ur = new RoleLogoutRes();
            PRoleLogoutClient logout = new PRoleLogoutClient();
            String requestxml = logout.generateXML(head, ur);

//            String str_key = null;
//            DealerLogin dl = dealerlogin.getDealerLoginInfo(Integer.parseInt(head.getDealer_id()), head.getTerminal_id());
//            if (dl != null && dl.getSessionkey() != null && !dl.getSessionkey().isEmpty()) {
//                str_key = dl.getSessionkey();
//                logger.error("Sessionkey:" + str_key);
//            }
//
//            System.out.println("key:" + str_key);
//            String sessionKey = (String) CacheManager.getCacheInfo("sessionKey").getValue();
//            logger.info("sessionKey is: " + sessionKey);
//            if (sessionKey == null) {
//                logger.info("sessionKey is null");
//            }
            byte[] ret_key = NewSign.GetSign(requestxml, StaticVariable.privateKey, StaticVariable.SESSION);
            // byte[] ret_key = NewSign.GetS(requestxml, "d:/gdtestp12.cer", str_key);
            //byte[] ret_key = NewSign.GetSign(s, FilePath.getStorePath(), FilePath.getAliaspwd(), FilePath.getAlias(), str_key);
            head.setBody_sign(ret_key);
            requestxml = logout.generateXML(head, ur);
            //把报文转换成XML
            // String requestxml = XmlFactoryClient.getInstance().getAppClientXF(ActionID.GAMBLER_LOGOUT).generateXML(head, ur);
            //拼接发送XML
            String xml = "action=" + ActionID.GAMBLER_LOGOUT + "&" + requestxml;
            System.out.println(xml);
            //发送xml并取回回复XML
            String responsexml = HttpSend.httpSend(StaticVariable.SERVERURL, xml);
            System.out.println(responsexml);
            // String responsexml = HttpUtil.httpSend(xml, StaticVariable.SERVERURL, true);//StaticVariable.SERVERURL服务器地址
            //解析XML
            APPMessage ap = logout.parseXML(responsexml);
            //APPMessage ap = XmlFactoryClient.getInstance().getAppClientXF(ActionID.GAMBLER_LOGOUT).parseXML(responsexml);

            RoleLogoutRes tbrr = (RoleLogoutRes) ap.getContent();//得到返回内容
            int resultcode = tbrr.getResult().getResultCode();
            //输出结果
            if (resultcode == 0) {
                System.out.println("send successfull");
            } else {
                System.out.println(resultcode + "\t" + tbrr.getResult().getResultDes());
            }
            JOptionPane.showMessageDialog(this, "返回码:" + resultcode + "结果:" + tbrr.getResult().getResultDes(), "操作", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_logout

    private void Cancle(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cancle
        try {
            int actionID = ActionID.GAMBLER_CANCEL;
            AppHeader head = new AppHeader();
            head.setType(Integer.parseInt(sendtype.getText()));//head.setType(1);//发送方类型
            head.setAction(actionID);//协议编号
            head.setVersion(0);//version版本号(填0)
            head.setDealer_id(dealer_id.getText().trim());//head.setDealer_id("111");//运营商ID
            head.setTerminal_id(Integer.parseInt(terminal_id.getText().trim()));//head.setTerminal_id("111");//终端机号
            head.setMobile(Mobile.getText());//手机号(填0)head.setMobile("15101105612");
            head.setPhone(Phone.getText());//电话号码(填0)   head.setPhone("15101105612");
            head.setSent_time(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));//发送时间head.setSent_time("2015-07-29 12:12:12");
            // head.setSign(new byte[0]);//head.setSign("1231321".getBytes());//报文体签名
            //组装报文内容<pkgC>
            UserCancelReq req = new UserCancelReq();
            req.setGamblerName(GamblerName.getText());
            req.setModifyTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(head.getSent_time()));
            req.setGamblerPwd(GamblerPwd.getText());
            //把报文转换成XML
            PUserCancelClient cancel = new PUserCancelClient();
            String requestxml = cancel.generateXML(head, req);
            // String requestxml = XmlFactoryClient.getInstance().getAppClientXF(actionID).generateXML(head, req);

//            String str_key = null;
//            DealerLogin dl = dealerlogin.getDealerLoginInfo(Integer.parseInt(head.getDealer_id()), head.getTerminal_id());
//            if (dl != null && dl.getSessionkey() != null && !dl.getSessionkey().isEmpty()) {
//                str_key = dl.getSessionkey();
//                logger.error("Sessionkey:" + str_key);
//            }
//
////            System.out.println("key:" + str_key);
//            String sessionKey = (String) CacheManager.getCacheInfo("sessionKey").getValue();
//            logger.info("sessionKey is: " + sessionKey);
//            if (sessionKey == null) {
//                logger.info("sessionKey is null");
//            }
            byte[] ret_key = NewSign.GetSign(requestxml, StaticVariable.privateKey, StaticVariable.SESSION);
            // byte[] ret_key = NewSign.GetS(requestxml, "d:/gdtestp12.cer", str_key);
            //byte[] ret_key = NewSign.GetSign(s, FilePath.getStorePath(), FilePath.getAliaspwd(), FilePath.getAlias(), str_key);
            head.setBody_sign(ret_key);
            requestxml = cancel.generateXML(head, req);
            //拼接发送XML
            String xml = "action=" + actionID + "&" + requestxml;
            System.out.println(xml);
            //发送xml并取回回复XML
            String responsexml = HttpSend.httpSend(StaticVariable.SERVERURL, xml);
            // String responsexml = HttpUtil.httpSend(xml, StaticVariable.SERVERURL, true);//StaticVariable.SERVERURL服务器地址
            //解析XML
            APPMessage ap = cancel.parseXML(responsexml);
            //APPMessage ap = XmlFactoryClient.getInstance().getAppClientXF(actionID).parseXML(responsexml);
            //回复报文
            UserCancelReqRes tbrr = (UserCancelReqRes) ap.getContent();//得到返回内容
            int resultcode = tbrr.getAppResResult().getResultCode();
            //输出结果
            if (resultcode == 0) {
                System.out.println("send successfull");
            } else {
                System.out.println(resultcode + "\t" + tbrr.getAppResResult().getResultDes());
            }
            JOptionPane.showMessageDialog(this, "返回码:" + resultcode + "结果:" + tbrr.getAppResResult().getResultDes(), "操作", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_Cancle

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        AppHeader head = new AppHeader();
        head.setType(Integer.parseInt(sendtype.getText()));//head.setType(1);//发送方类型
        head.setAction(ActionID.GAMBLER_LOGIN);//协议编号
        head.setVersion(0);//version版本号(填0)
        head.setDealer_id(dealer_id.getText());//head.setDealer_id("111");//运营商ID
        head.setTerminal_id(Integer.parseInt(terminal_id.getText()));//head.setTerminal_id("111");//终端机号
        head.setMobile(Mobile.getText());//手机号(填0)head.setMobile("15101105612");
        head.setPhone(Phone.getText());//电话号码(填0)   head.setPhone("15101105612");
        head.setSent_time(new Date().toString());//发送时间head.setSent_time("2015-07-29 12:12:12");
        // head.setSign(new byte[0]);//head.setSign("1231321".getBytes());//报文体签名

        String userNo = userno.getText(); //用户个数
        String eachNo = eachnum.getText();//每用户登录次数
        new CreateUserLoginXmlAndSend().SendUserLoginXml(head, Integer.parseInt(userNo), Integer.parseInt(eachNo));
        // JOptionPane.showMessageDialog(this, "发送成功", "操作", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

    }//GEN-LAST:event_jButton5ActionPerformed
    /**
     * 批量登陆
     *
     * @author liyongjia
     * @param evt
     */
    private void batchLogin(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batchLogin

        AppHeader head = new AppHeader();

        //获得用户名和密码。
        byte[] bname = GamblerName.getText().getBytes();
        byte[] bpwd = GamblerPwd.getText().getBytes();
        //封装表单数据
        head.setType(Integer.parseInt(sendtype.getText()));//head.setType(1);//发送方类型
        head.setAction(ActionID.GAMBLER_LOGIN);//协议编号
        head.setVersion(0);//version版本号(填0)
        head.setDealer_id(dealer_id.getText().trim());//head.setDealer_id("111");//运营商ID
        head.setMobile(Mobile.getText());//手机号(填0)head.setMobile("15101105612");
        head.setPhone(Phone.getText());//电话号码(填0)   head.setPhone("15101105612");
        head.setSent_time(new Date().toString());//发送时间head.setSent_time("2015-07-29 12:12:12");
        // head.setSign(new byte[0]);//head.setSign("1231321".getBytes());//报文体签名
        //  logger.info("请求参数 ：" + head.toString());
        //查询t_tmn_info表中的终端机号
        Set<Integer> set = new HashSet<>();
        int dealerid = Integer.parseInt(dealer_id.getText().trim());
        int fromInt = Integer.parseInt(from.getText().trim());
        int toInt = Integer.parseInt(to.getText().trim());
        try {
            TmnSelectDao.getTerminalId(dealerid, fromInt, toInt, set);
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
        // logger.info("查询t_tmn_info表中的终端机号结果为 ：" + set.toString());
        long startTime1 = System.currentTimeMillis();
        for (Integer terminalid : set) {
            //每个线程用的数据是克隆版本
            AppHeader newHead = null;
            long startTime = System.currentTimeMillis();
            try {
                newHead = (AppHeader) head.clone();
            } catch (CloneNotSupportedException ex) {
                java.util.logging.Logger.getLogger(SendBetNumberXml.class.getName()).log(Level.SEVERE, null, ex);
            }
            newHead.setTerminal_id(terminalid);
            Count count = new Count();
            // logger.info("newHead ==" + head.toString());
            TaskManager.getInstance().execute(new BatchLoginTask(newHead, bname, bpwd, this, count));
            eachnum1.setText(count.getCount() + "");
            long endTime = System.currentTimeMillis();
            eachnum2.setText((endTime - startTime1) / 1000F + "");
            // logger.info("terminalid共用时间:"+(endTime-startTime1)/1000F);
        }
        long endTime1 = System.currentTimeMillis();

        logger.info("运行共用时间:" + (endTime1 - startTime1) / 1000F);
    }//GEN-LAST:event_batchLogin

    private void toActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toActionPerformed

    private void fromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fromActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            int actionID = ActionID.GAMBLER_CANCEL;
            int dealerid = Integer.parseInt(dealer_id.getText().trim());
            if (dealerid == 145 || dealerid == 146) {
                Set<Integer> set = new HashSet<>();
                int fromInt = Integer.parseInt(from.getText().trim());
                int toInt = Integer.parseInt(to.getText().trim());
                try {
                    //查询t_tmn_info表中的终端机号
                    TmnSelectDao.getTerminalId(dealerid, fromInt, toInt, set);
                } catch (Exception ex) {
                    java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(Level.SEVERE, null, ex);
                }
                logger.info("查询t_tmn_info表中的终端机号结果为 ：" + set.toString());
                for (Integer terminalid : set) {
                    AppHeader head = new AppHeader();
                    head.setType(Integer.parseInt(sendtype.getText()));//head.setType(1);//发送方类型
                    head.setAction(actionID);//协议编号
                    head.setVersion(0);//version版本号(填0)
                    head.setDealer_id(dealer_id.getText().trim());//head.setDealer_id("111");//运营商ID
                    head.setTerminal_id(terminalid);//head.setTerminal_id("111");//终端机号
                    head.setMobile(Mobile.getText());//手机号(填0)head.setMobile("15101105612");
                    head.setPhone(Phone.getText());//电话号码(填0)   head.setPhone("15101105612");
                    head.setSent_time(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));//发送时间head.setSent_time("2015-07-29 12:12:12");

                    //组装报文内容<pkgC>
                    UserCancelReq req = new UserCancelReq();
                    req.setGamblerName(GamblerName.getText());
                    req.setModifyTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(head.getSent_time()));
                    req.setGamblerPwd(GamblerPwd.getText());

                    TaskManager.getInstance().execute(new BatchCacelTask(head, req));
                }
            } else {//140\141无自助终端
                List list = null;
                try {
                    //查询用户名列表
                    list = GamblerInfoDao.getGambInfo(dealer_id.getText());
                } catch (Exception ex) {
                    java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(Level.SEVERE, null, ex);
                }
                logger.info("查询t_tmn_info表中的终端机号结果为 ：" + list.toString());
                for (Object gamblerInfo : list) {
                    AppHeader head = new AppHeader();
                    head.setType(Integer.parseInt(sendtype.getText()));//head.setType(1);//发送方类型
                    head.setAction(actionID);//协议编号
                    head.setVersion(0);//version版本号(填0)
                    head.setDealer_id(dealer_id.getText().trim());//head.setDealer_id("111");//运营商ID
                    head.setTerminal_id(Integer.parseInt(terminal_id.getText().trim()));//head.setTerminal_id("111");//终端机号
                    head.setMobile(Mobile.getText());//手机号(填0)head.setMobile("15101105612");
                    head.setPhone(Phone.getText());//电话号码(填0)   head.setPhone("15101105612");
                    head.setSent_time(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));//发送时间head.setSent_time("2015-07-29 12:12:12");

                    //组装报文内容<pkgC>
                    UserCancelReq req = new UserCancelReq();
                    req.setGamblerName(((GamblerInfo) gamblerInfo).getGambler_name());
                    req.setModifyTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(head.getSent_time()));
                    req.setGamblerPwd(((GamblerInfo) gamblerInfo).getPwd());

                    TaskManager.getInstance().execute(new BatchCacelTask(head, req));
                }
            }
        } catch (Exception ex) {
            logger.error(ex);
        }        // TODO add your handling co
    }//GEN-LAST:event_jButton6ActionPerformed

    private void eachnum1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eachnum1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eachnum1ActionPerformed

    private void eachnum2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eachnum2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eachnum2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField GamblerName;
    private javax.swing.JTextField GamblerPwd;
    private javax.swing.JTextField Mobile;
    private javax.swing.JTextField Phone;
    private javax.swing.JTextField dealer_id;
    private javax.swing.JTextField eachnum;
    private javax.swing.JTextField eachnum1;
    private javax.swing.JTextField eachnum2;
    private javax.swing.JTextField from;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField sendtype;
    private javax.swing.JTextField terminal_id;
    private javax.swing.JTextField to;
    private javax.swing.JTextField userno;
    // End of variables declaration//GEN-END:variables
}
