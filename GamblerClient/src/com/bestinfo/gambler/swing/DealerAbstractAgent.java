package com.bestinfo.gambler.swing;

import com.bestinfo.arithmetic.NewSign;
import com.bestinfo.gambler.all.StaticVariable;
import com.bestinfo.gambler.all.HttpSend;
import com.bestinfo.gambler.batch.BatchDrawMoneyTask;
import com.bestinfo.gambler.batch.BetTicketPac;
import com.bestinfo.gambler.batch.TaskManager;
import com.bestinfo.gambler.batch.TmnSelectDao;
import com.bestinfo.gambler.createBetNumber.Count;
import com.bestinfo.protocols.client.agents.PAgentAbstractUserClient;
import com.bestinfo.gambler.protocols.ActionID;
import com.bestinfo.protocols.agents.AgentAbstractUserInfo;
import com.bestinfo.protocols.agents.AgentAbstractUserReqList;
import com.bestinfo.protocols.agents.AgentAbstractUserResList;
import com.bestinfo.protocols.message.APPMessage;
import com.bestinfo.protocols.message.AppHeader;
import com.bestinfo.redis.login.DealerLoginRedis;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import javax.annotation.Resource;
import javax.swing.JOptionPane;
import org.apache.log4j.Logger;

/**
 *
 * @author jone
 */
public class DealerAbstractAgent extends javax.swing.JFrame {

    private static Logger logger = Logger.getLogger(DealerAbstractAgent.class);

    @Resource
    private DealerLoginRedis dealerlogin;

    /**
     * Creates new form DealerAbstractAgent
     */
    public DealerAbstractAgent() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        gamblername = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        gamblerpwd = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        no = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        charge = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        money = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        terminal_id = new javax.swing.JTextField();
        dealer_id = new javax.swing.JTextField();
        Phone = new javax.swing.JTextField();
        sendtype = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        Phone1 = new javax.swing.JTextField();
        charge1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        charge3 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        Phone2 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        Phone3 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        from = new javax.swing.JTextField();
        fromlable = new javax.swing.JLabel();
        tolable = new javax.swing.JLabel();
        to = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        eachnum5 = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        eachnum2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel1.setText("运营商管理员:");

        gamblername.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        gamblername.setText("qqqq");
        gamblername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gamblernameActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel2.setText("运营商管理员密码:");

        gamblerpwd.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        gamblerpwd.setText("111111");
        gamblerpwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gamblerpwdActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel4.setText("代理充值彩民个数:");

        no.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        no.setText("1");
        no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noActionPerformed(evt);
            }
        });

        jButton1.setText("提交");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel8.setText("                                  运营商代理提款");

        jLabel9.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel9.setText("提款类型:");

        charge.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        charge.setText("1@2@3@21");
        charge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chargeActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("充值类型：支付宝1，银行卡2，充值卡3，话费4，\n虚拟帐户5\n可以不填\n流水号自定标识最好为一位");
        jScrollPane1.setViewportView(jTextArea1);

        jLabel13.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel13.setText("提款金额:");

        money.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        money.setText("222");
        money.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moneyActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel3.setText("发送方类型：");

        jLabel5.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel5.setText("运营商ID：");

        jLabel6.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel6.setText("终端机号：");

        jLabel10.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel10.setText("手机号：");

        terminal_id.setText("4");
        terminal_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terminal_idActionPerformed(evt);
            }
        });

        dealer_id.setText("0");
        dealer_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dealer_idActionPerformed(evt);
            }
        });

        Phone.setText("14610001");
        Phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhoneActionPerformed(evt);
            }
        });

        sendtype.setText("146");
        sendtype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendtypeActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel15.setText("电话号码：");

        Phone1.setText("0");
        Phone1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Phone1ActionPerformed(evt);
            }
        });

        charge1.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        charge1.setText("5");
        charge1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                charge1ActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel17.setText("流水号自定标识:");

        jLabel18.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel18.setText("彩民姓名:");

        charge3.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        charge3.setText("123");
        charge3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                charge3ActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel19.setText("身份证件编号:");

        Phone2.setText("101110200006300044");
        Phone2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Phone2ActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel20.setText("运营商负责人:");

        Phone3.setText("全民付");
        Phone3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Phone3ActionPerformed(evt);
            }
        });

        jButton2.setText("批量提交");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        from.setText("14610001");
        from.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromActionPerformed(evt);
            }
        });

        fromlable.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        fromlable.setText("from:");

        tolable.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        tolable.setText("to:");

        to.setText("14610100");
        to.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toActionPerformed(evt);
            }
        });

        jLabel57.setText("成功数目：");

        eachnum5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eachnum5ActionPerformed(evt);
            }
        });

        jLabel55.setText("用时");

        eachnum2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eachnum2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(eachnum2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel57)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eachnum5, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(fromlable)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(from, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(tolable)
                        .addGap(18, 18, 18)
                        .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(90, 90, 90))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gamblerpwd, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gamblername, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(terminal_id)
                            .addComponent(sendtype)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(no, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Phone))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(money, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dealer_id))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(charge1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Phone1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(charge, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(charge3, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel19)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Phone2)
                            .addComponent(Phone3)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel55)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(gamblername))
                    .addComponent(terminal_id, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sendtype)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(gamblerpwd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(no, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Phone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(money, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dealer_id, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Phone1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(charge1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Phone2))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(charge3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(charge, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Phone3))
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(from, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromlable, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eachnum5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel55)
                    .addComponent(eachnum2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tolable, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(53, 53, 53))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 34, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gamblernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gamblernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gamblernameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:

            // TODO add your handling code here:
            int actionID = ActionID.DEALER_PROXYABSTRACT;

            AppHeader head = new AppHeader();
            head.setType(Integer.parseInt(terminal_id.getText()));//发送方类型    自助终端运营商4

            head.setAction(actionID);//协议编号
            head.setVersion(0);//version版本号(填0)
            head.setDealer_id(sendtype.getText());//head.setDealer_id("111");//运营商ID

            head.setTerminal_id(Integer.parseInt(Phone.getText()));//head.setTerminal_id("111");//终端机号

            head.setMobile(dealer_id.getText());//手机号(填0)head.setMobile("15101105612");

            head.setPhone(Phone1.getText());//电话号码(填0)   head.setPhone("15101105612");

            head.setSent_time(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));//发送时间head.setSent_time("2015-07-29 12:12:12");
            //head.setSign(new byte[0]);//head.setSign("1231321".getBytes());//报文体签名

            AgentAbstractUserReqList req = new AgentAbstractUserReqList();
            List<AgentAbstractUserInfo> agentAbstractUsers = new ArrayList<AgentAbstractUserInfo>();
            AgentAbstractUserInfo ar = new AgentAbstractUserInfo();

            ar.setGamblerName(charge3.getText());

            ar.setDealerSerial(charge.getText());

            ar.setAbstractMoney(new BigDecimal(money.getText()));

            ar.setAbstractType((Integer.valueOf(charge1.getText())));
            ar.setAbstractTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(head.getSent_time()));
            agentAbstractUsers.add(ar);
            req.setDealerManager(gamblername.getText());
            req.setPwd(gamblerpwd.getText());
            req.setOwnerName(Phone3.getText());
            req.setIDNo(Phone2.getText());
            req.setAgentAbstractUsers(agentAbstractUsers);
            PAgentAbstractUserClient userAbstract = new PAgentAbstractUserClient();
            String requestxml = userAbstract.generateXML(head, req);

            //把报文转换成XML
            //String requestxml = XmlFactoryClient.getInstance().getAppClientXF(actionID).generateXML(head, req);
//            String str_key = null;
//            DealerLogin dl = dealerlogin.getDealerLoginInfo(Integer.parseInt(head.getDealer_id()), head.getTerminal_id());
//            if (dl != null && dl.getSessionkey() != null && !dl.getSessionkey().isEmpty()) {
//                str_key = dl.getSessionkey();
//                logger.error("Sessionkey:" + str_key);
//            }
//            
//            System.out.println("key:" + str_key);
//            String sessionKey = (String) CacheManager.getCacheInfo("sessionKey").getValue();
//            logger.info("sessionKey is: " + sessionKey);
//            if (sessionKey == null) {
//                logger.info("sessionKey is null");
//            }
//            byte[] ret_key = NewSign.GetSign(requestxml, "d:/gdclient.p12", "gdtest@2015", "cosmos", sessionKey);
            //byte[] ret_key = NewSign.GetS(requestxml, "d:/gdtestp12.cer", str_key);
            //byte[] ret_key = NewSign.GetSign(s, FilePath.getStorePath(), FilePath.getAliaspwd(), FilePath.getAlias(), str_key);
            byte[] ret_key = NewSign.GetSign(requestxml, StaticVariable.privateKey, StaticVariable.SESSION);

            head.setBody_sign(ret_key);
            requestxml = userAbstract.generateXML(head, req);

            //拼接发送XML
            String xml = "action=" + actionID + "&" + requestxml;
            System.out.println(xml);
            //发送xml并取回回复XML
            String responsexml = HttpSend.httpSend(StaticVariable.SERVERURL, xml);
            // String responsexml = HttpUtil.httpSend(xml, StaticVariable.SERVERURL, true);//StaticVariable.SERVERURL服务器地址
            //解析XML
            APPMessage ap = userAbstract.parseXML(responsexml);

            //APPMessage ap =  XmlFactoryClient.getInstance().getAppClientXF(actionID).parseXML(responsexml);
            //回复报文
            AgentAbstractUserResList tbrr = (AgentAbstractUserResList) ap.getContent();//得到返回内容
            int resultcode = tbrr.getResult().getResultCode();
            //输出结果
            if (resultcode == 0) {
                System.out.println("send successfull");
            } else {
                System.out.println(resultcode + "\t" + tbrr.getResult().getResultDes());
            }
            JOptionPane.showMessageDialog(this, "返回码:" + resultcode + "结果:" + tbrr.getResult().getResultDes(), "操作", JOptionPane.INFORMATION_MESSAGE);

//        AppHeader header = StaticVariable.head;
//        if (header == null) {
//            return;
//        }
//        String threadnum = size.getText();
//        String eachno = size2.getText();
//        if (threadnum.isEmpty() || eachno.isEmpty()) {
//            return;
//        }
//        AgentRechargeUserReqList aruu = new AgentRechargeUserReqList();
//        String name = gamblername.getText();
//        String pwd = gamblerpwd.getText();
//        String noa = no.getText();
//        String chargeid = charge.getText();
//        String umoney = money.getText();
//        String ser1 = ser.getText();
//        aruu.setDealerManager(name);
//        aruu.setPwd(pwd);
//        try {
//            new GamblerAccountinfo().moreDealerRechargethread(ser1, header, aruu, Integer.parseInt(noa), chargeid, Integer.parseInt(threadnum), umoney, Integer.parseInt(eachno));
//        } catch (Exception e) {
//            logger.error(e);
//        }
            //        CarrierDealSerialNo.getInstance().lastNumberTowriteFile();
        } catch (Exception ex) {
            logger.error(ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void terminal_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terminal_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_terminal_idActionPerformed

    private void dealer_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dealer_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dealer_idActionPerformed

    private void sendtypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendtypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sendtypeActionPerformed

    private void Phone1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Phone1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Phone1ActionPerformed

    private void PhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PhoneActionPerformed

    private void Phone2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Phone2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Phone2ActionPerformed

    private void Phone3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Phone3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Phone3ActionPerformed

    private void charge3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_charge3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_charge3ActionPerformed

    private void charge1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_charge1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_charge1ActionPerformed

    private void chargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chargeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chargeActionPerformed

    private void gamblerpwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gamblerpwdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gamblerpwdActionPerformed

    private void moneyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moneyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_moneyActionPerformed

    private void noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noActionPerformed

    /**
     * 多线程提交
     *
     * @param evt
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            Count count = new Count();
            int dealerid = Integer.parseInt(sendtype.getText().trim());
            if (dealerid == 145 || dealerid == 146) {
                Set<Integer> set = new HashSet<>();
                int fromInt = Integer.parseInt(from.getText().trim());
                int toInt = Integer.parseInt(to.getText().trim());
                try {
                    //查询t_tmn_info表中的终端机号
                    TmnSelectDao.getTerminalId(dealerid, fromInt, toInt, set);
                } catch (Exception ex) {
                    java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(Level.SEVERE, null, ex);
                }
                logger.info("查询t_tmn_info表中的终端机号结果为 ：" + set.toString());
                long startTime = System.currentTimeMillis();
                for (Integer terminalid : set) {

                    AppHeader head = new AppHeader();
                    head.setType(Integer.parseInt(terminal_id.getText()));//发送方类型    自助终端运营商4
                    head.setAction(ActionID.DEALER_PROXYABSTRACT);//协议编号
                    head.setVersion(0);//version版本号(填0)
                    head.setDealer_id(sendtype.getText().trim());//head.setDealer_id("111");//运营商ID
                    head.setTerminal_id(terminalid);//head.setTerminal_id("111");//终端机号
                    head.setMobile(dealer_id.getText());//手机号(填0)head.setMobile("15101105612");
                    head.setPhone(Phone1.getText());//电话号码(填0)   head.setPhone("15101105612");
                    head.setSent_time(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));//发送时间head.setSent_time("2015-07-29 12:12:12");
                    head.setBody_sign(new byte[0]);//head.setSign("1231321".getBytes());//报文体签名

                    AgentAbstractUserReqList req = new AgentAbstractUserReqList();
                    List<AgentAbstractUserInfo> agentAbstractUsers = new ArrayList<>();
                    AgentAbstractUserInfo ar = new AgentAbstractUserInfo();

                    ar.setGamblerName(charge3.getText());
                    String time = new Date().getTime() + "";
                    ar.setDealerSerial("0@2@1@" + time.substring(10) + head.getTerminal_id());
                    ar.setAbstractMoney(new BigDecimal(money.getText()));
                    ar.setAbstractType((Integer.valueOf(charge1.getText())));
                    ar.setAbstractTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(head.getSent_time()));
                    agentAbstractUsers.add(ar);

                    req.setDealerManager(gamblername.getText());
                    req.setPwd(gamblerpwd.getText());
                    req.setOwnerName(Phone3.getText());
                    req.setIDNo(Phone2.getText());
                    req.setAgentAbstractUsers(agentAbstractUsers);

                    logger.info("newHead ==" + head.toString());
                    TaskManager.getInstance().execute(new BatchDrawMoneyTask(head, req));
                }
                long endtTime = System.currentTimeMillis();
                logger.info("共用时间是多少呢？？？:" + (endtTime - startTime) / 1000F + "秒");
            } else {//140\141无自助终端
                List list = null;
                long stsrtTime = System.currentTimeMillis();
                AppHeader head = new AppHeader();
                head.setType(Integer.parseInt(terminal_id.getText()));//发送方类型    自助终端运营商4
                head.setAction(ActionID.DEALER_PROXYABSTRACT);//协议编号
                head.setVersion(0);//version版本号(填0)
                head.setDealer_id(sendtype.getText().trim());//head.setDealer_id("111");//运营商ID
                head.setTerminal_id(Integer.parseInt(Phone.getText().trim()));//head.setTerminal_id("111");//终端机号
                head.setMobile(dealer_id.getText());//手机号(填0)head.setMobile("15101105612");
                head.setPhone(Phone1.getText());//电话号码(填0)   head.setPhone("15101105612");
                head.setSent_time(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));//发送时间head.setSent_time("2015-07-29 12:12:12");
                AgentAbstractUserReqList req = new AgentAbstractUserReqList();
                List<AgentAbstractUserInfo> agentAbstractUsers = new ArrayList<>();
                AgentAbstractUserInfo ar = new AgentAbstractUserInfo();

                //多线程 执行多个用户
                //  ar.setGamblerName(((GamblerInfo) gamblerInfo).getGambler_name());
//                    String time = new Date().getTime() + "";
//                    ar.setDealerSerial("0@2@1@" + time.substring(3) + ar.getGamblerName());
//                    Cache d = new Cache();
//                    d.setValue(ar.getDealerSerial());
//                    CacheManager.putCache(ar.getGamblerName(), d);
                ar.setAbstractMoney(new BigDecimal(money.getText()));
                ar.setAbstractType((Integer.valueOf(charge1.getText())));
                ar.setAbstractTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(head.getSent_time()));
                agentAbstractUsers.add(ar);

                req.setDealerManager(gamblername.getText());
                req.setPwd(gamblerpwd.getText());
                req.setOwnerName(Phone3.getText());
                req.setIDNo(Phone2.getText());
                req.setAgentAbstractUsers(agentAbstractUsers);
                BetTicketPac bt = new BetTicketPac();
                bt.execAbstractBatch(Integer.valueOf(from.getText()), Integer.valueOf(to.getText()), req, count, head);
                long endtTime = System.currentTimeMillis();
                eachnum2.setText(StaticVariable.TASTE_TIME + "");
                logger.info("共用时间为" + (endtTime - stsrtTime) / 1000F);
                eachnum5.setText(count.getCount() + "");

//
//                try {
//                    //查询用户名列表
//                    list = GamblerInfoDao.getGambInfo(sendtype.getText().trim());
//                } catch (Exception ex) {
//                    java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(Level.SEVERE, null, ex);
//                }
//                logger.info("查询t_tmn_info表中的终端机号结果为 ：" + list.toString());
//                long startTime = System.currentTimeMillis();
//                for (Object gamblerInfo : list) {
//                    //每个线程用的数据是克隆版本
//
//                    AppHeader head = new AppHeader();
//                    head.setType(Integer.parseInt(terminal_id.getText()));//发送方类型    自助终端运营商4
//                    head.setAction(ActionID.DEALER_PROXYABSTRACT);//协议编号
//                    head.setVersion(0);//version版本号(填0)
//                    head.setDealer_id(sendtype.getText().trim());//head.setDealer_id("111");//运营商ID
//                    head.setTerminal_id(0);//head.setTerminal_id("111");//终端机号
//                    head.setMobile(dealer_id.getText());//手机号(填0)head.setMobile("15101105612");
//                    head.setPhone(Phone1.getText());//电话号码(填0)   head.setPhone("15101105612");
//                    head.setSent_time(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));//发送时间head.setSent_time("2015-07-29 12:12:12");
//                    head.setBody_sign(new byte[0]);//head.setSign("1231321".getBytes());//报文体签名
//
//                    AgentAbstractUserReqList req = new AgentAbstractUserReqList();
//                    List<AgentAbstractUserInfo> agentAbstractUsers = new ArrayList<>();
//                    AgentAbstractUserInfo ar = new AgentAbstractUserInfo();
//
//                    //多线程 执行多个用户
//                    ar.setGamblerName(((GamblerInfo) gamblerInfo).getGambler_name());
//
//                    String time = new Date().getTime() + "";
//                    ar.setDealerSerial("0@2@1@" + time.substring(3) + ar.getGamblerName());
//                    Cache d = new Cache();
//                    d.setValue(ar.getDealerSerial());
//                    CacheManager.putCache(ar.getGamblerName(), d);
//                    ar.setAbstractMoney(new BigDecimal(money.getText()));
//                    ar.setAbstractType((Integer.valueOf(charge1.getText())));
//                    ar.setAbstractTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(head.getSent_time()));
//                    agentAbstractUsers.add(ar);
//
//                    req.setDealerManager(gamblername.getText());
//                    req.setPwd(gamblerpwd.getText());
//                    req.setOwnerName(Phone3.getText());
//                    req.setIDNo(Phone2.getText());
//                    req.setAgentAbstractUsers(agentAbstractUsers);
//                    TaskManager.getInstance().execute(new BatchDrawMoneyTask(head, req));
//                }
//                long endtTime = System.currentTimeMillis();
//                logger.info("共用时间是多少呢？？？:" + (endtTime - startTime) / 1000F + "秒");
            }
        } catch (Exception ex) {
            logger.error(ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void fromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fromActionPerformed

    private void toActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toActionPerformed

    private void eachnum5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eachnum5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eachnum5ActionPerformed

    private void eachnum2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eachnum2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eachnum2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DealerAbstractAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DealerAbstractAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DealerAbstractAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DealerAbstractAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DealerAbstractAgent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Phone;
    private javax.swing.JTextField Phone1;
    private javax.swing.JTextField Phone2;
    private javax.swing.JTextField Phone3;
    private javax.swing.JTextField charge;
    private javax.swing.JTextField charge1;
    private javax.swing.JTextField charge3;
    private javax.swing.JTextField dealer_id;
    private javax.swing.JTextField eachnum2;
    private javax.swing.JTextField eachnum5;
    private javax.swing.JTextField from;
    private javax.swing.JLabel fromlable;
    private javax.swing.JTextField gamblername;
    private javax.swing.JTextField gamblerpwd;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField money;
    private javax.swing.JTextField no;
    private javax.swing.JTextField sendtype;
    private javax.swing.JTextField terminal_id;
    private javax.swing.JTextField to;
    private javax.swing.JLabel tolable;
    // End of variables declaration//GEN-END:variables
}
